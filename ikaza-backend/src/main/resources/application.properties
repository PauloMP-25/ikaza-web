# ============================================
# CONFIGURACIÓN DEL SERVIDOR
# ============================================
spring.application.name=ikaza-backend
server.port=8080

# ============================================
# CONFIGURACIÓN JWT
# ============================================
jwt.secret=${JWT_SECRET}
jwt.expiration=86400000
jwt.refresh-expiration=604800000

# ============================================
# CONFIGURACIÓN DE POSTGRESQL
# ============================================
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/tienda_ikaza}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuración JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false

# ============ Tareas Programadas ============
spring.task.scheduling.enabled=true
spring.task.scheduling.pool.size=5
pedidos.limpieza.intervalo-inicial=1800000
pedidos.limpieza.intervalo-ejecucion=1800000
pedidos.limpieza.umbral-horas=1

# ===============================
# CONFIGURACIÓN DE MERCADO PAGO
# ===============================
mercadopago.access.token=${MP_ACCESS_TOKEN}
mercadopago.public.key=${MP_PUBLIC_KEY}
mercadopago.webhook.secret=${MP_WEBHOOK_SECRET}
mercadopago.success.url=${APP_URL:http://localhost:4200}/pedidos/success
mercadopago.failure.url=${APP_URL:http://localhost:4200}/pedidos/failure
mercadopago.pending.url=${APP_URL:http://localhost:4200}/pedidos/pending
mercadopago.notification.url=${API_URL:http://localhost:8080}/api/pedidos/webhook/mercadopago

# ===============================
# CONFIGURACIÓN DE Google Maps API
# ===============================
google.maps.api.key=${GOOGLE_MAPS_API_KEY}

# ============================================
# TWILIO (SMS)
# ============================================
twilio.account.sid=${twilio.account.sid}
twilio.auth.token=${twilio.auth.token}
twilio.phone.number=${twilio.phone.number}

# ===============================
# CONFIGURACIÓN DE EMAIL (Gmail)
# ===============================
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Configuración de emails
email.from=${EMAIL_FROM:noreply@ikaza.com}
email.nombre.empresa=${EMAIL_NOMBRE_EMPRESA:IKAZA}

# ============================================
# CONFIGURACIÓN DE LOGGING
# ============================================
logging.level.root=INFO
logging.level.pe.com.ikaza.backend=DEBUG
logging.level.pe.com.ikaza.backend.service.PedidoService=DEBUG
logging.level.pe.com.ikaza.backend.service.InventarioService=DEBUG
logging.level.pe.com.ikaza.backend.service.pago=DEBUG
logging.level.org.springframework.transaction=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

logging.file.name=logs/ikaza-backend.log
logging.file.max-size=10MB
logging.file.max-history=30


# ============================================
# CONFIGURACIÓN DE ARCIVOS/UPLOAD
# ============================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain
# Directorio de uploads (crear si no existe)
app.upload.dir=uploads/buzon/
# ============ Jackson (JSON) ============
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=America/Lima
spring.jackson.default-property-inclusion=non_null

# ============ Gestión de Stock ============
inventario.reserva.expiracion=60
inventario.stock-bajo.nivel=5

# ============ Configuración de Transacciones ============
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# ============ Pool de Conexiones ============
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# ============ Actuator (Monitoreo) ============
management.endpoints.web.exposure.include=health,info,metrics,scheduledtasks
management.endpoint.health.show-details=when-authorized
management.metrics.enable.jvm=true
management.metrics.enable.process=true
management.metrics.enable.system=true

# ============================================
# CONFIGURACIÓN DE CORS
# ============================================
cors.allowed-origins=http://localhost:4200,http://localhost:4200/
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# ============ Configuración de Ambiente ============
spring.profiles.active=${SPRING_PROFILES_ACTIVE:local}

# ============ Timezone ============
spring.jpa.properties.hibernate.jdbc.time_zone=America/Lima

# ===============================
# CONFIGURACIÓN DE LA APLICACIÓN
# ===============================
app.name=IkazaAppWeb
app.frontend.url=${FRONTEND_URL:http://localhost:4200}

spring.web.client.rest-template.read-timeout=5000
spring.web.client.rest-template.connect-timeout=3000

# ============================================
# CONFIGURACIÓN DE SESSION (MongoDB)
# ============================================
spring.session.store-type=mongodb
spring.session.mongodb.collection-name=sessions

# ============================================
# SEGURIDAD (Logging para debug)
# ============================================
logging.level.pe.com.ikaza.backend.security=DEBUG
logging.level.org.springframework.security=DEBUG