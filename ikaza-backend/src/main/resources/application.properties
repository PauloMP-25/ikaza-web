# ============================================
# CONFIGURACIÓN DEL SERVIDOR
# ============================================
spring.application.name=ikaza-backend
server.port=8080
# ============================================
# CONFIGURACIÓN DE POSTGRESQL
# ============================================
# URL de conexión a PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/ikaza_web
spring.datasource.username=postgres
spring.datasource.password=admin
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuración JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false
# ============================================
# CONFIGURACIÓN DE MONGODB
# ============================================
spring.data.mongodb.uri=${MONGO_URI:mongodb://localhost:27017/ikaza_mongo}
spring.data.mongodb.database=ikaza_mongo
# Opciones adicionales de MongoDB
spring.data.mongodb.auto-index-creation=true

# ============ Tareas Programadas ============
# Habilitar scheduling para limpieza automática de pedidos
spring.task.scheduling.enabled=true
spring.task.scheduling.pool.size=5

# Configuración de limpieza de pedidos preliminares
# Intervalo inicial: 30 minutos (1800000 ms)
# Intervalo de ejecución: cada 30 minutos (1800000 ms)
# Umbral de antigüedad: 1 hora
pedidos.limpieza.intervalo-inicial=1800000
pedidos.limpieza.intervalo-ejecucion=1800000
pedidos.limpieza.umbral-horas=1

# ===============================
# CONFIGURACIÓN DE CULQI
# ===============================
culqi.secret.key=${CULQI_SECRET_KEY:sk_test_tu_clave_secreta_aqui} 
culqi.api.key=${CULQI_PUBLIC_KEY:pk_test_tu_clave_publica_aqui}
culqi.api.url=https://api.culqi.com/v2
culqi.timeout.connection=5000
culqi.timeout.read=10000

# Para producción: sk_live_tu_secret_key_produccion

# ===============================
# CONFIGURACIÓN DE MERCADO PAGO
# ===============================
mercadopago.access.token=${MP_ACCESS_TOKEN:APP_USR-449486404366979-091720-fead70c56951f04e2f908b91b607d7e0-2694108405}
mercadopago.public.key=${MP_PUBLIC_KEY:APP_USR-472a9a4e-9afb-49e3-93bc-cfad3c1d0cc8}
mercadopago.webhook.secret=${MP_WEBHOOK_SECRET:APP_USR-449486404366979-091720-fead70c56951f04e2f908b91b607d7e0-2694108405}
mercadopago.success.url=${APP_URL:http://localhost:4200}/pedidos/success
mercadopago.failure.url=${APP_URL:http://localhost:4200}/pedidos/failure
mercadopago.pending.url=${APP_URL:http://localhost:4200}/pedidos/pending
mercadopago.notification.url=${API_URL:http://localhost:8080}/api/pedidos/webhook/mercadopago
# Para producción: APP-tu_access_token_produccion

# ===============================
# CONFIGURACIÓN DE Google Maps API
# ===============================
google.maps.api.key=AIzaSyA_4sVIR3dDoZWVseO1RN1auhrep8zCAb8
# ===============================
# CONFIGURACIÓN DE EMAIL (Gmail)
# ===============================
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME:paulomoronpoma@gmail.com}
spring.mail.password=${MAIL_PASSWORD:zanh curc bvvx nvtv}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# Configuración de emails
email.from=${EMAIL_FROM:noreply@ikaza.com}
email.nombre.empresa=IKAZA

# ============================================
# CONFIGURACIÓN DE LOGGING
# ============================================
logging.level.root=INFO
logging.level.pe.com.ikaza.backend=DEBUG
logging.level.pe.com.ikaza.backend.service.PedidoService=DEBUG
logging.level.pe.com.ikaza.backend.service.InventarioService=DEBUG
logging.level.pe.com.ikaza.backend.service.pago=DEBUG
logging.level.org.springframework.transaction=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Patrón de log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Archivo de log
logging.file.name=logs/ikaza-backend.log
logging.file.max-size=10MB
logging.file.max-history=30
# ============================================
# CONFIGURACIÓN DE ARCIVOS/UPLOAD
# ============================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Compresión de respuestas
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain

# ============ Jackson (JSON) ============
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=America/Lima
spring.jackson.default-property-inclusion=non_null

# ============ Gestión de Stock ============
# Tiempo de expiración de reservas (en minutos)
inventario.reserva.expiracion=60

# Nivel de stock bajo para alertas
inventario.stock-bajo.nivel=5

# ============ Configuración de Transacciones ============
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# ============ Pool de Conexiones ============
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# ============ Actuator (Monitoreo) ============
management.endpoints.web.exposure.include=health,info,metrics,scheduledtasks
management.endpoint.health.show-details=when-authorized
management.metrics.enable.jvm=true
management.metrics.enable.process=true
management.metrics.enable.system=true

# ============ CORS ============
app.cors.allowed-origins=${CORS_ORIGINS:http://localhost:4200,http://localhost:5173}
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# ============ Configuración de Ambiente ============
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}

# ============ Timezone ============
spring.jpa.properties.hibernate.jdbc.time_zone=America/Lima

# ===============================
# CONFIGURACIÓN DE LA APLICACIÓN
# ===============================
app.name=IkazaAppWeb
app.frontend.url=${FRONTEND_URL:http://localhost:4200}

# Configuración de RestTemplate
spring.web.client.rest-template.read-timeout=5000
spring.web.client.rest-template.connect-timeout=3000

# ============================================
# CONFIGURACIÓN DE SESSION (MongoDB)
# ============================================
spring.session.store-type=mongodb
spring.session.mongodb.collection-name=sessions

# ============================================
# CONFIGURACIÓN DE ACTUATOR (Opcional - para monitoreo)
# ============================================
logging.level.pe.com.ikaza.backend.security=DEBUG
logging.level.org.springframework.security=DEBUG