2025-10-29 01:28:48 [main] INFO  p.c.i.b.BackendApplicationTests - Starting BackendApplicationTests using Java 21.0.2 with PID 20928 (started by user in D:\proyecto-ikaza-web\ikaza-backend)
2025-10-29 01:28:49 [main] DEBUG p.c.i.b.BackendApplicationTests - Running with Spring Boot v3.5.6, Spring v6.2.11
2025-10-29 01:28:49 [main] INFO  p.c.i.b.BackendApplicationTests - The following 1 profile is active: "dev"
2025-10-29 01:28:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 01:28:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-29 01:28:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 194 ms. Found 12 JPA repository interfaces.
2025-10-29 01:28:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 01:28:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-10-29 01:28:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2025-10-29 01:28:54 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-29 01:28:54 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.29.Final
2025-10-29 01:28:54 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-29 01:28:55 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-29 01:28:55 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-29 01:28:56 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2e0fdc83
2025-10-29 01:28:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-29 01:28:56 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-29 01:28:56 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-29 01:29:00 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-29 01:29:03 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-29 01:29:04 [main] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'jwtAuthenticationFilter': Error creating bean with name 'jwtAuthenticationFilter': Unsatisfied dependency expressed through field 'userDetailsService': Error creating bean with name 'userDetailsServiceImpl': Unsatisfied dependency expressed through field 'usuarioRepository': Error creating bean with name 'usuarioRepository' defined in pe.com.ikaza.backend.repository.jpa.UsuarioRepository defined in @EnableJpaRepositories declared on BackendApplication: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
2025-10-29 01:29:04 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-29 01:29:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-29 01:29:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-29 01:29:04 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-10-29 01:29:04 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'jwtAuthenticationFilter': Error creating bean with name 'jwtAuthenticationFilter': Unsatisfied dependency expressed through field 'userDetailsService': Error creating bean with name 'userDetailsServiceImpl': Unsatisfied dependency expressed through field 'usuarioRepository': Error creating bean with name 'usuarioRepository' defined in pe.com.ikaza.backend.repository.jpa.UsuarioRepository defined in @EnableJpaRepositories declared on BackendApplication: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LauncherAdapter.executeWithoutCancellationToken(LauncherAdapter.java:60)
	at org.apache.maven.surefire.junitplatform.LauncherAdapter.execute(LauncherAdapter.java:52)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:203)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:168)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:136)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter': Unsatisfied dependency expressed through field 'userDetailsService': Error creating bean with name 'userDetailsServiceImpl': Unsatisfied dependency expressed through field 'usuarioRepository': Error creating bean with name 'usuarioRepository' defined in pe.com.ikaza.backend.repository.jpa.UsuarioRepository defined in @EnableJpaRepositories declared on BackendApplication: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1698)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1643)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 107 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailsServiceImpl': Unsatisfied dependency expressed through field 'usuarioRepository': Error creating bean with name 'usuarioRepository' defined in pe.com.ikaza.backend.repository.jpa.UsuarioRepository defined in @EnableJpaRepositories declared on BackendApplication: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1760)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1643)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 120 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'usuarioRepository' defined in pe.com.ikaza.backend.repository.jpa.UsuarioRepository defined in @EnableJpaRepositories declared on BackendApplication: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1698)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1643)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 134 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 143 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:128)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:260)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	... 155 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:455)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:431)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:384)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:366)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:344)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:101)
	... 159 common frames omitted
2025-10-29 01:29:04 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [pe.com.ikaza.backend.BackendApplicationTests@4ecc4b43]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@4e7e7763 testClass = pe.com.ikaza.backend.BackendApplicationTests, locations = [], classes = [pe.com.ikaza.backend.BackendApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@238d68ff, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@76b07f29, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@35b74c5c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@c667f46, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@1b410b60, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@31edaa7d, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@6147751f], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LauncherAdapter.executeWithoutCancellationToken(LauncherAdapter.java:60)
	at org.apache.maven.surefire.junitplatform.LauncherAdapter.execute(LauncherAdapter.java:52)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:203)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:168)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:136)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'jwtAuthenticationFilter': Error creating bean with name 'jwtAuthenticationFilter': Unsatisfied dependency expressed through field 'userDetailsService': Error creating bean with name 'userDetailsServiceImpl': Unsatisfied dependency expressed through field 'usuarioRepository': Error creating bean with name 'usuarioRepository' defined in pe.com.ikaza.backend.repository.jpa.UsuarioRepository defined in @EnableJpaRepositories declared on BackendApplication: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 80 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter': Unsatisfied dependency expressed through field 'userDetailsService': Error creating bean with name 'userDetailsServiceImpl': Unsatisfied dependency expressed through field 'usuarioRepository': Error creating bean with name 'usuarioRepository' defined in pe.com.ikaza.backend.repository.jpa.UsuarioRepository defined in @EnableJpaRepositories declared on BackendApplication: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1698)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1643)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 107 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailsServiceImpl': Unsatisfied dependency expressed through field 'usuarioRepository': Error creating bean with name 'usuarioRepository' defined in pe.com.ikaza.backend.repository.jpa.UsuarioRepository defined in @EnableJpaRepositories declared on BackendApplication: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1760)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1643)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 120 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'usuarioRepository' defined in pe.com.ikaza.backend.repository.jpa.UsuarioRepository defined in @EnableJpaRepositories declared on BackendApplication: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1698)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1643)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 134 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 143 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByEmailAndFirebaseUidIsNull(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:128)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:260)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	... 155 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:455)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:431)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:384)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:366)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:344)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:101)
	... 159 common frames omitted
2025-10-29 01:32:22 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Starting BackendApplication using Java 21.0.2 with PID 18176 (D:\proyecto-ikaza-web\ikaza-backend\target\classes started by user in D:\proyecto-ikaza-web\ikaza-backend)
2025-10-29 01:32:22 [restartedMain] DEBUG p.c.ikaza.backend.BackendApplication - Running with Spring Boot v3.5.6, Spring v6.2.11
2025-10-29 01:32:22 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - The following 1 profile is active: "dev"
2025-10-29 01:32:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-29 01:32:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-29 01:32:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 01:32:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-29 01:32:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 160 ms. Found 12 JPA repository interfaces.
2025-10-29 01:32:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 01:32:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-10-29 01:32:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 1 MongoDB repository interface.
2025-10-29 01:32:26 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-29 01:32:26 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-29 01:32:26 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.46]
2025-10-29 01:32:27 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-29 01:32:27 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4486 ms
2025-10-29 01:32:27 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-29 01:32:27 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.29.Final
2025-10-29 01:32:27 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-29 01:32:28 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-29 01:32:28 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-29 01:32:28 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5ae2ca29
2025-10-29 01:32:28 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-29 01:32:29 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-29 01:32:29 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-29 01:32:31 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-29 01:32:34 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-29 01:32:34 [restartedMain] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter': Unsatisfied dependency expressed through field 'userDetailsService': Error creating bean with name 'userDetailsServiceImpl': Unsatisfied dependency expressed through field 'usuarioRepository': Error creating bean with name 'usuarioRepository' defined in pe.com.ikaza.backend.repository.jpa.UsuarioRepository defined in @EnableJpaRepositories declared on BackendApplication: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByFirebaseUid(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByFirebaseUid(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
2025-10-29 01:32:34 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-10-29 01:32:34 [restartedMain] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [HikariPool-1:housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
 java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
 java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
 java.base/java.lang.Thread.run(Thread.java:1583)
2025-10-29 01:32:34 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2025-10-29 01:32:34 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-29 01:32:34 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-29 01:32:34 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-29 01:32:34 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-10-29 01:32:35 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at pe.com.ikaza.backend.BackendApplication.main(BackendApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:147)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	... 11 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter': Unsatisfied dependency expressed through field 'userDetailsService': Error creating bean with name 'userDetailsServiceImpl': Unsatisfied dependency expressed through field 'usuarioRepository': Error creating bean with name 'usuarioRepository' defined in pe.com.ikaza.backend.repository.jpa.UsuarioRepository defined in @EnableJpaRepositories declared on BackendApplication: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByFirebaseUid(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByFirebaseUid(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:81)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:773)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:81)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	... 16 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailsServiceImpl': Unsatisfied dependency expressed through field 'usuarioRepository': Error creating bean with name 'usuarioRepository' defined in pe.com.ikaza.backend.repository.jpa.UsuarioRepository defined in @EnableJpaRepositories declared on BackendApplication: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByFirebaseUid(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByFirebaseUid(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1760)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1643)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 58 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'usuarioRepository' defined in pe.com.ikaza.backend.repository.jpa.UsuarioRepository defined in @EnableJpaRepositories declared on BackendApplication: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByFirebaseUid(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByFirebaseUid(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1698)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1643)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 72 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByFirebaseUid(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByFirebaseUid(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 81 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional pe.com.ikaza.backend.repository.jpa.UsuarioRepository.findByFirebaseUid(java.lang.String); No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:128)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:260)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	... 93 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'firebaseUid' found for type 'Usuario'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:455)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:431)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:384)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:366)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:344)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:101)
	... 97 common frames omitted
2025-10-29 01:41:47 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Starting BackendApplication using Java 21.0.2 with PID 14828 (D:\proyecto-ikaza-web\ikaza-backend\target\classes started by user in D:\proyecto-ikaza-web\ikaza-backend)
2025-10-29 01:41:47 [restartedMain] DEBUG p.c.ikaza.backend.BackendApplication - Running with Spring Boot v3.5.6, Spring v6.2.11
2025-10-29 01:41:47 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - The following 1 profile is active: "dev"
2025-10-29 01:41:47 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-29 01:41:47 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-29 01:41:49 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 01:41:49 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-29 01:41:50 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 175 ms. Found 12 JPA repository interfaces.
2025-10-29 01:41:50 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 01:41:50 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-10-29 01:41:50 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2025-10-29 01:41:53 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-29 01:41:53 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-29 01:41:53 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.46]
2025-10-29 01:41:53 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-29 01:41:53 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5245 ms
2025-10-29 01:41:53 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-29 01:41:53 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.29.Final
2025-10-29 01:41:54 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-29 01:41:54 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-29 01:41:54 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-29 01:41:55 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@36b24d33
2025-10-29 01:41:55 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-29 01:41:55 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-29 01:41:55 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-29 01:41:58 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-29 01:42:01 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-29 01:42:02 [restartedMain] DEBUG p.c.i.b.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-10-29 01:42:02 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-29 01:42:02 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-29 01:42:02 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-29 01:42:06 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.5.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.2+13-LTS-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1854a094, com.mongodb.Jep395RecordCodecProvider@51743e4b, com.mongodb.KotlinCodecProvider@7f1bee49]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-10-29 01:42:06 [cluster-ClusterId{value='6901b73d1e30282f41bc7882', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=59541300, minRoundTripTimeNanos=0}
2025-10-29 01:42:06 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-29 01:42:07 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-29 01:42:07 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-29 01:42:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-29 01:42:08 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Started BackendApplication in 22.234 seconds (process running for 23.423)
2025-10-29 01:46:02 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 133 class path changes (0 additions, 133 deletions, 0 modifications)
2025-10-29 01:47:10 [Thread-4] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-29 01:47:36 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-29 01:47:45 [Thread-4] WARN  o.apache.tomcat.util.net.NioEndpoint - The pollers did not stop within the expected time
2025-10-29 01:48:38 [Thread-4] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-29 01:49:36 [Thread-4] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-29 01:49:53 [Thread-4] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-29 01:50:42 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Starting BackendApplication using Java 21.0.2 with PID 14828 (D:\proyecto-ikaza-web\ikaza-backend\target\classes started by user in D:\proyecto-ikaza-web\ikaza-backend)
2025-10-29 01:50:42 [restartedMain] DEBUG p.c.ikaza.backend.BackendApplication - Running with Spring Boot v3.5.6, Spring v6.2.11
2025-10-29 01:50:42 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - The following 1 profile is active: "dev"
2025-10-29 01:50:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 01:50:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-29 01:50:52 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1343 ms. Found 12 JPA repository interfaces.
2025-10-29 01:50:52 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 01:50:52 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-10-29 01:50:52 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61 ms. Found 1 MongoDB repository interface.
2025-10-29 01:51:03 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-29 01:51:04 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-29 01:51:04 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.46]
2025-10-29 01:51:04 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-29 01:51:04 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 21689 ms
2025-10-29 01:51:04 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-29 01:51:04 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-29 01:51:05 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-29 01:51:05 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-10-29 01:51:06 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@1eacc796
2025-10-29 01:51:06 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-10-29 01:51:06 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-29 01:51:06 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-29 01:51:11 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-29 01:51:14 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-29 01:51:15 [restartedMain] DEBUG p.c.i.b.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-10-29 01:51:16 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-29 01:51:16 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-29 01:51:18 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.5.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.2+13-LTS-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1854a094, com.mongodb.Jep395RecordCodecProvider@51743e4b, com.mongodb.KotlinCodecProvider@7f1bee49]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-10-29 01:51:18 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-29 01:51:18 [cluster-ClusterId{value='6901b9661e30282f41bc7883', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=428897900, minRoundTripTimeNanos=0}
2025-10-29 01:51:19 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-29 01:51:19 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-29 01:51:19 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-29 01:51:19 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Started BackendApplication in 42.013 seconds (process running for 574.395)
2025-10-29 01:51:19 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-10-29 01:51:21 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 132 class path changes (132 additions, 0 deletions, 0 modifications)
2025-10-29 01:51:21 [Thread-7] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-29 01:51:21 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-29 01:51:21 [Thread-7] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-29 01:51:21 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-10-29 01:51:21 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-10-29 01:51:21 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Starting BackendApplication using Java 21.0.2 with PID 14828 (D:\proyecto-ikaza-web\ikaza-backend\target\classes started by user in D:\proyecto-ikaza-web\ikaza-backend)
2025-10-29 01:51:21 [restartedMain] DEBUG p.c.ikaza.backend.BackendApplication - Running with Spring Boot v3.5.6, Spring v6.2.11
2025-10-29 01:51:21 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - The following 1 profile is active: "dev"
2025-10-29 01:51:26 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 01:51:26 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-29 01:51:26 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 12 JPA repository interfaces.
2025-10-29 01:51:26 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 01:51:26 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-10-29 01:51:26 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 1 MongoDB repository interface.
2025-10-29 01:51:26 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-29 01:51:26 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-29 01:51:26 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.46]
2025-10-29 01:51:26 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-29 01:51:26 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5457 ms
2025-10-29 01:51:27 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-29 01:51:27 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-29 01:51:27 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-29 01:51:27 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-10-29 01:51:27 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection org.postgresql.jdbc.PgConnection@8079ecf
2025-10-29 01:51:27 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-10-29 01:51:27 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-29 01:51:27 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-29 01:51:27 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-29 01:51:29 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-29 01:51:30 [restartedMain] DEBUG p.c.i.b.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-10-29 01:51:30 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-29 01:51:30 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-29 01:51:31 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.5.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.2+13-LTS-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1854a094, com.mongodb.Jep395RecordCodecProvider@51743e4b, com.mongodb.KotlinCodecProvider@7f1bee49]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-10-29 01:51:31 [cluster-ClusterId{value='6901b9731e30282f41bc7884', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3719400, minRoundTripTimeNanos=0}
2025-10-29 01:51:31 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-29 01:51:31 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-29 01:51:31 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-29 01:51:32 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-29 01:51:32 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Started BackendApplication in 10.805 seconds (process running for 586.885)
2025-10-29 01:51:32 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-10-29 02:14:23 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Starting BackendApplication using Java 21.0.2 with PID 19196 (D:\proyecto-ikaza-web\ikaza-backend\target\classes started by user in D:\proyecto-ikaza-web\ikaza-backend)
2025-10-29 02:14:23 [restartedMain] DEBUG p.c.ikaza.backend.BackendApplication - Running with Spring Boot v3.5.6, Spring v6.2.11
2025-10-29 02:14:23 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - The following 1 profile is active: "dev"
2025-10-29 02:14:24 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-29 02:14:24 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-29 02:14:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 02:14:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-29 02:14:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 134 ms. Found 12 JPA repository interfaces.
2025-10-29 02:14:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 02:14:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-10-29 02:14:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2025-10-29 02:14:30 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-29 02:14:30 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-29 02:14:30 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.46]
2025-10-29 02:14:30 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-29 02:14:30 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6600 ms
2025-10-29 02:14:31 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-29 02:14:31 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.29.Final
2025-10-29 02:14:31 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-29 02:14:31 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-29 02:14:31 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-29 02:14:33 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@32ff002a
2025-10-29 02:14:33 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-29 02:14:34 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-29 02:14:34 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-29 02:14:37 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-29 02:14:43 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-29 02:14:44 [restartedMain] DEBUG p.c.i.b.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-10-29 02:14:45 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-29 02:14:45 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-29 02:14:46 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-29 02:14:51 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.5.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.2+13-LTS-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3061783c, com.mongodb.Jep395RecordCodecProvider@11bd78d7, com.mongodb.KotlinCodecProvider@575486a1]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-10-29 02:14:52 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-29 02:14:52 [cluster-ClusterId{value='6901beeb14da80a806088951', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1197993600, minRoundTripTimeNanos=0}
2025-10-29 02:14:52 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-29 02:14:53 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-29 02:14:54 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-29 02:14:54 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Started BackendApplication in 31.52 seconds (process running for 32.487)
2025-10-29 02:15:11 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-29 02:15:11 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-29 02:15:11 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-10-29 02:15:11 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/login
2025-10-29 02:15:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-10-29 02:15:11 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:15:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-10-29 02:15:11 [http-nio-8080-exec-2] INFO  p.c.i.b.controller.AuthController - 🔐 Intento de login para: cesar_2002_love@hotmail.com
2025-10-29 02:15:11 [http-nio-8080-exec-2] INFO  p.c.i.backend.service.AuthService - 🔐 Intento de login para: cesar_2002_love@hotmail.com
2025-10-29 02:15:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:15:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:15:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:15:12 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Failed to authenticate since password does not match stored value
2025-10-29 02:15:12 [http-nio-8080-exec-2] DEBUG o.s.s.authentication.ProviderManager - Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-10-29 02:15:12 [http-nio-8080-exec-2] WARN  p.c.i.backend.service.AuthService - ⚠️ Credenciales inválidas para: cesar_2002_love@hotmail.com
2025-10-29 02:15:12 [http-nio-8080-exec-2] WARN  p.c.i.b.controller.AuthController - ⚠️ Credenciales inválidas: cesar_2002_love@hotmail.com
2025-10-29 02:15:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-vendido
2025-10-29 02:15:12 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:15:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-vendido
2025-10-29 02:15:12 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-recientes?limite=12
2025-10-29 02:15:12 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-baratos?limite=12
2025-10-29 02:15:12 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/por-agotarse?limite=12
2025-10-29 02:15:12 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:15:12 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-recientes?limite=12
2025-10-29 02:15:12 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:15:12 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:15:12 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/por-agotarse?limite=12
2025-10-29 02:15:12 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-baratos?limite=12
2025-10-29 02:15:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.calificacion_promedio desc,
        p1_0.fecha_creacion desc 
    fetch
        first 1 rows only
2025-10-29 02:15:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.precio 
    fetch
        first ? rows only
2025-10-29 02:15:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.fecha_creacion desc 
    fetch
        first ? rows only
2025-10-29 02:15:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock between 5 and 10 
    order by
        p1_0.stock 
    fetch
        first ? rows only
2025-10-29 02:15:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-29 02:15:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-29 02:15:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-29 02:15:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-29 02:15:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-29 02:15:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-29 02:15:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-29 02:15:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-29 02:15:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-29 02:15:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-29 02:15:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-29 02:15:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-29 02:18:06 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Starting BackendApplication using Java 21.0.2 with PID 4788 (D:\proyecto-ikaza-web\ikaza-backend\target\classes started by user in D:\proyecto-ikaza-web\ikaza-backend)
2025-10-29 02:18:06 [restartedMain] DEBUG p.c.ikaza.backend.BackendApplication - Running with Spring Boot v3.5.6, Spring v6.2.11
2025-10-29 02:18:06 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - The following 1 profile is active: "dev"
2025-10-29 02:18:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-29 02:18:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-29 02:18:11 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 02:18:11 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-29 02:18:11 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 153 ms. Found 12 JPA repository interfaces.
2025-10-29 02:18:11 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 02:18:11 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-10-29 02:18:11 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 1 MongoDB repository interface.
2025-10-29 02:18:14 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-29 02:18:14 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-29 02:18:14 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.46]
2025-10-29 02:18:14 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-29 02:18:14 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7419 ms
2025-10-29 02:18:14 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-29 02:18:15 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.29.Final
2025-10-29 02:18:15 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-29 02:18:15 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-29 02:18:15 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-29 02:18:16 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@17e5fe49
2025-10-29 02:18:16 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-29 02:18:16 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-29 02:18:16 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-29 02:18:19 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    create table categorias (
        id_categoria bigint generated by default as identity,
        activo boolean not null,
        descripcion_categoria TEXT,
        fecha_creacion timestamp(6) not null,
        nombre_categoria varchar(100) not null,
        primary key (id_categoria)
    )
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    create table clientes (
        id_cliente integer generated by default as identity,
        apellidos_cliente varchar(100) not null,
        fecha_actualizacion timestamp(6),
        fecha_nacimiento date,
        genero varchar(15),
        nombres_cliente varchar(100) not null,
        numero_documento varchar(20),
        prefijo_telefono varchar(5),
        telefono varchar(20),
        telefono_verificado boolean not null,
        tipo_documento varchar(20),
        id_usuario integer not null,
        primary key (id_cliente)
    )
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    create table detalle_pedido (
        id_detalle bigint generated by default as identity,
        cantidad integer not null,
        color_seleccionado varchar(50),
        precio_unitario numeric(10,2) not null,
        subtotal numeric(10,2) not null,
        talla_seleccionada varchar(20),
        id_pedido bigint not null,
        id_producto bigint not null,
        primary key (id_detalle)
    )
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    create table direcciones (
        id_direccion integer generated by default as identity,
        alias varchar(100),
        codigo_postal varchar(10),
        direccion varchar(255) not null,
        distrito varchar(100),
        es_principal BOOLEAN DEFAULT FALSE,
        fecha_creacion timestamp(6),
        id_usuario integer not null,
        latitud float(53),
        longitud float(53),
        pais varchar(100) not null,
        provincia varchar(100),
        referencia varchar(255),
        region varchar(100),
        primary key (id_direccion)
    )
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    create table historial_estado_pedido (
        id_historial bigint generated by default as identity,
        estado_anterior varchar(30) check (estado_anterior in ('PENDIENTE','CONFIRMADO','PROCESANDO','EN_PREPARACION','ENVIADO','EN_TRANSITO','EN_REPARTO','ENTREGADO','CANCELADO','DEVUELTO')),
        estado_nuevo varchar(30) not null check (estado_nuevo in ('PENDIENTE','CONFIRMADO','PROCESANDO','EN_PREPARACION','ENVIADO','EN_TRANSITO','EN_REPARTO','ENTREGADO','CANCELADO','DEVUELTO')),
        fecha_cambio timestamp(6) not null,
        id_pedido bigint not null,
        primary key (id_historial)
    )
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    create table inventario (
        id_inventario bigint generated by default as identity,
        fecha_actualizacion timestamp(6),
        stock_actual integer not null,
        stock_disponible integer,
        stock_reservado integer not null,
        id_producto bigint not null,
        primary key (id_inventario)
    )
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    create table metodos_pago (
        id_metodo integer generated by default as identity,
        activo BOOLEAN DEFAULT TRUE not null,
        alias varchar(50),
        banco_emisor varchar(30),
        es_principal BOOLEAN DEFAULT FALSE not null,
        fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        fecha_expiracion varchar(7),
        id_usuario integer not null,
        nombre_titular varchar(100),
        tipo varchar(50) not null,
        tipo_tarjeta varchar(20),
        token_pago varchar(500) not null,
        ultimos_4_digitos varchar(4),
        primary key (id_metodo)
    )
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    create table movimientos_inventario (
        id_movimiento bigint generated by default as identity,
        cantidad integer not null,
        fecha_movimiento timestamp(6) not null,
        motivo varchar(255),
        stock_anterior integer not null,
        stock_nuevo integer not null,
        tipo_movimiento varchar(50) not null check (tipo_movimiento in ('ENTRADA','SALIDA','AJUSTE','DEVOLUCION')),
        id_producto bigint not null,
        id_usuario integer,
        primary key (id_movimiento)
    )
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    create table pagos (
        id_pago bigint generated by default as identity,
        banco_emisor varchar(30),
        datos_pasarela_json TEXT,
        estado varchar(30) check (estado in ('PENDIENTE','PROCESANDO','APROBADO','RECHAZADO','REEMBOLSADO')),
        fecha_creacion timestamp(6),
        fecha_pago timestamp(6),
        id_metodo bigint,
        metodo_usado varchar(50) not null check (metodo_usado in ('MERCADO_PAGO','CULQI','TRANSFERENCIA_BANCARIA','EFECTIVO_CONTRAENTREGA')),
        monto numeric(10,2) not null,
        referencia_pasarela varchar(150),
        tipo_tarjeta varchar(20),
        transaccion_externa_id varchar(200),
        ultimos_4_digitos varchar(4),
        id_pedido bigint not null,
        primary key (id_pago)
    )
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    create table pedidos (
        id_pedido bigint generated by default as identity,
        estado varchar(30) not null check (estado in ('PENDIENTE','CONFIRMADO','PROCESANDO','EN_PREPARACION','ENVIADO','EN_TRANSITO','EN_REPARTO','ENTREGADO','CANCELADO','DEVUELTO')),
        estado_pago varchar(30) check (estado_pago in ('PENDIENTE','PROCESANDO','APROBADO','RECHAZADO','REEMBOLSADO')),
        fecha_pago timestamp(6),
        fecha_pedido timestamp(6) not null,
        id_usuario integer not null,
        metodo_pago varchar(30) check (metodo_pago in ('MERCADO_PAGO','CULQI','TRANSFERENCIA_BANCARIA','EFECTIVO_CONTRAENTREGA')),
        numero_pedido varchar(50) not null,
        subtotal numeric(10,2),
        total numeric(10,2) not null,
        transaccion_id varchar(100),
        primary key (id_pedido)
    )
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    create table productos (
        id_producto bigint generated by default as identity,
        calificacion_promedio numeric(3,2),
        descripcion_producto varchar(500),
        fecha_actualizacion timestamp(6),
        fecha_creacion timestamp(6) not null,
        mongo_product_id varchar(24),
        nombre_producto varchar(200) not null,
        precio numeric(10,2) not null,
        stock integer not null,
        stock_minimo integer,
        id_categoria bigint not null,
        primary key (id_producto)
    )
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    create table usuarios (
        id_usuario integer generated by default as identity,
        activo boolean not null,
        bloqueado_hasta timestamp(6),
        email varchar(150) not null,
        email_verificado boolean not null,
        fecha_creacion timestamp(6) not null,
        foto_perfil varchar(500),
        intentos_fallidos integer,
        password varchar(255) not null,
        proveedor_auth varchar(50),
        refresh_token varchar(500),
        rol varchar(50) not null,
        token_expiracion timestamp(6),
        ultimo_acceso timestamp(6),
        primary key (id_usuario)
    )
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists categorias 
       drop constraint if exists UK29mosksismnta90dn19gl3gr2
2025-10-29 02:18:19 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-10-29 02:18:19 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - no existe la restricción «uk29mosksismnta90dn19gl3gr2» en la relación «categorias», omitiendo
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists categorias 
       add constraint UK29mosksismnta90dn19gl3gr2 unique (nombre_categoria)
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists clientes 
       drop constraint if exists UK2viccgf178bd74vfbq8ctsv8t
2025-10-29 02:18:19 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-10-29 02:18:19 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - no existe la restricción «uk2viccgf178bd74vfbq8ctsv8t» en la relación «clientes», omitiendo
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists clientes 
       add constraint UK2viccgf178bd74vfbq8ctsv8t unique (numero_documento)
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists clientes 
       drop constraint if exists UKl8nfa1qkfrk958v1rx9h8anvb
2025-10-29 02:18:19 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-10-29 02:18:19 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - no existe la restricción «ukl8nfa1qkfrk958v1rx9h8anvb» en la relación «clientes», omitiendo
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists clientes 
       add constraint UKl8nfa1qkfrk958v1rx9h8anvb unique (id_usuario)
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists inventario 
       drop constraint if exists UKtlye33nglhh35y08rxqrumnfw
2025-10-29 02:18:19 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-10-29 02:18:19 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - no existe la restricción «uktlye33nglhh35y08rxqrumnfw» en la relación «inventario», omitiendo
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists inventario 
       add constraint UKtlye33nglhh35y08rxqrumnfw unique (id_producto)
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists pagos 
       drop constraint if exists UKhllc72uwnsxv6imjsttp92wyx
2025-10-29 02:18:19 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-10-29 02:18:19 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - no existe la restricción «ukhllc72uwnsxv6imjsttp92wyx» en la relación «pagos», omitiendo
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists pagos 
       add constraint UKhllc72uwnsxv6imjsttp92wyx unique (id_pedido)
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists pedidos 
       drop constraint if exists UK6ywv5771tibn93splh6t3ft06
2025-10-29 02:18:19 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-10-29 02:18:19 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - no existe la restricción «uk6ywv5771tibn93splh6t3ft06» en la relación «pedidos», omitiendo
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint UK6ywv5771tibn93splh6t3ft06 unique (numero_pedido)
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists usuarios 
       drop constraint if exists UKkfsp0s1tflm1cwlj8idhqsad0
2025-10-29 02:18:19 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-10-29 02:18:19 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - no existe la restricción «ukkfsp0s1tflm1cwlj8idhqsad0» en la relación «usuarios», omitiendo
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists usuarios 
       add constraint UKkfsp0s1tflm1cwlj8idhqsad0 unique (email)
2025-10-29 02:18:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists clientes 
       add constraint FKf6u564o4dprnq7uln5gjvidp3 
       foreign key (id_usuario) 
       references usuarios
2025-10-29 02:18:20 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists detalle_pedido 
       add constraint FKh10qteor08f4cbxhsf97qtgyk 
       foreign key (id_pedido) 
       references pedidos
2025-10-29 02:18:20 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists detalle_pedido 
       add constraint FKnwadx4gon4by0uw748yo8chit 
       foreign key (id_producto) 
       references productos
2025-10-29 02:18:20 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists direcciones 
       add constraint FKk9knhuryk5fsqnn5blyo4f57 
       foreign key (id_usuario) 
       references usuarios
2025-10-29 02:18:20 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists historial_estado_pedido 
       add constraint FKgnk4rqligw1d57to3x7juihk4 
       foreign key (id_pedido) 
       references pedidos
2025-10-29 02:18:20 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists inventario 
       add constraint FK92r6ui4b0u2kxqad8cyiusrdn 
       foreign key (id_producto) 
       references productos
2025-10-29 02:18:20 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists metodos_pago 
       add constraint FKaoiyjy5dag150kny8b2xw1ut8 
       foreign key (id_usuario) 
       references usuarios
2025-10-29 02:18:20 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists movimientos_inventario 
       add constraint FK7ttlcxcscpdu0wa9vhq6celdu 
       foreign key (id_producto) 
       references productos
2025-10-29 02:18:20 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists movimientos_inventario 
       add constraint FKox35q6568f5qoh8ii09cihhqt 
       foreign key (id_usuario) 
       references usuarios
2025-10-29 02:18:20 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists pagos 
       add constraint FKrfg5sdbj438hkscav9i92bmct 
       foreign key (id_pedido) 
       references pedidos
2025-10-29 02:18:20 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists productos 
       add constraint FKdtoa37luoxhhvbicrfiu5ygbj 
       foreign key (id_categoria) 
       references categorias
2025-10-29 02:18:20 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-29 02:18:20 [restartedMain] DEBUG p.c.i.b.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-10-29 02:18:21 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-29 02:18:21 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-29 02:18:21 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-29 02:18:24 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.5.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.2+13-LTS-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@67897386, com.mongodb.Jep395RecordCodecProvider@723341cb, com.mongodb.KotlinCodecProvider@41c787ee]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-10-29 02:18:24 [cluster-ClusterId{value='6901bfc09538c26c0c3672f8', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=39322800, minRoundTripTimeNanos=0}
2025-10-29 02:18:24 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-29 02:18:25 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-29 02:18:25 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-29 02:18:26 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-29 02:18:26 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Started BackendApplication in 21.239 seconds (process running for 22.469)
2025-10-29 02:20:10 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-29 02:20:10 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-29 02:20:10 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2025-10-29 02:20:10 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/por-agotarse?limite=12
2025-10-29 02:20:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-vendido
2025-10-29 02:20:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-baratos?limite=12
2025-10-29 02:20:10 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-recientes?limite=12
2025-10-29 02:20:10 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:20:10 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:20:10 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:20:10 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:20:10 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/por-agotarse?limite=12
2025-10-29 02:20:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-vendido
2025-10-29 02:20:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-baratos?limite=12
2025-10-29 02:20:10 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-recientes?limite=12
2025-10-29 02:20:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.fecha_creacion desc 
    fetch
        first ? rows only
2025-10-29 02:20:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.precio 
    fetch
        first ? rows only
2025-10-29 02:20:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock between 5 and 10 
    order by
        p1_0.stock 
    fetch
        first ? rows only
2025-10-29 02:20:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.calificacion_promedio desc,
        p1_0.fecha_creacion desc 
    fetch
        first 1 rows only
2025-10-29 02:21:45 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/registro
2025-10-29 02:21:45 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/registro
2025-10-29 02:21:45 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:21:45 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/registro
2025-10-29 02:21:45 [http-nio-8080-exec-10] INFO  p.c.i.b.controller.AuthController - 📝 Intentando registrar usuario: cesar_2002_love@hotmail.com
2025-10-29 02:21:45 [http-nio-8080-exec-10] INFO  p.c.i.backend.service.AuthService - 📝 Iniciando registro para: cesar_2002_love@hotmail.com
2025-10-29 02:21:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-10-29 02:21:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        usuarios
        (activo, bloqueado_hasta, email, email_verificado, fecha_creacion, foto_perfil, intentos_fallidos, password, proveedor_auth, refresh_token, rol, token_expiracion, ultimo_acceso) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-29 02:21:45 [http-nio-8080-exec-10] INFO  p.c.i.backend.service.AuthService - ✅ Usuario registrado exitosamente - ID: 1
2025-10-29 02:21:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        usuarios 
    set
        activo=?,
        bloqueado_hasta=?,
        email=?,
        email_verificado=?,
        foto_perfil=?,
        intentos_fallidos=?,
        password=?,
        proveedor_auth=?,
        refresh_token=?,
        rol=?,
        token_expiracion=?,
        ultimo_acceso=? 
    where
        id_usuario=?
2025-10-29 02:21:46 [http-nio-8080-exec-10] INFO  p.c.i.b.controller.AuthController - ✅ Usuario registrado exitosamente: cesar_2002_love@hotmail.com
2025-10-29 02:21:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:21:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:21:46 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:21:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:21:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:21:46 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com - URI: /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:21:46 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:21:46 [http-nio-8080-exec-2] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para email: cesar_2002_love@hotmail.com
2025-10-29 02:21:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:21:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:21:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:21:46 [http-nio-8080-exec-2] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: cesar_2002_love@hotmail.com
2025-10-29 02:21:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:21:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:21:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:21:46 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com - URI: /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:21:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:21:46 [http-nio-8080-exec-4] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para email: cesar_2002_love@hotmail.com
2025-10-29 02:21:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:21:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:21:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:21:46 [http-nio-8080-exec-4] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: cesar_2002_love@hotmail.com
2025-10-29 02:22:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/login
2025-10-29 02:22:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-10-29 02:22:32 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:22:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-10-29 02:22:32 [http-nio-8080-exec-6] INFO  p.c.i.b.controller.AuthController - 🔐 Intento de login para: cesar_2002_love@hotmail.com
2025-10-29 02:22:32 [http-nio-8080-exec-6] INFO  p.c.i.backend.service.AuthService - 🔐 Intento de login para: cesar_2002_love@hotmail.com
2025-10-29 02:22:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:22:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:22:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:22:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-29 02:22:32 [http-nio-8080-exec-6] INFO  p.c.i.backend.service.AuthService - ✅ Login exitoso para: cesar_2002_love@hotmail.com
2025-10-29 02:22:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        usuarios 
    set
        activo=?,
        bloqueado_hasta=?,
        email=?,
        email_verificado=?,
        foto_perfil=?,
        intentos_fallidos=?,
        password=?,
        proveedor_auth=?,
        refresh_token=?,
        rol=?,
        token_expiracion=?,
        ultimo_acceso=? 
    where
        id_usuario=?
2025-10-29 02:22:32 [http-nio-8080-exec-6] INFO  p.c.i.b.controller.AuthController - ✅ Login exitoso para: cesar_2002_love@hotmail.com
2025-10-29 02:22:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:22:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:22:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:22:33 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com - URI: /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:22:33 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:22:33 [http-nio-8080-exec-9] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para email: cesar_2002_love@hotmail.com
2025-10-29 02:22:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:22:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:22:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:22:33 [http-nio-8080-exec-9] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: cesar_2002_love@hotmail.com
2025-10-29 02:22:33 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:22:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:22:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:22:33 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com - URI: /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:22:33 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:22:33 [http-nio-8080-exec-10] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para email: cesar_2002_love@hotmail.com
2025-10-29 02:22:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:22:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:22:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:22:33 [http-nio-8080-exec-10] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: cesar_2002_love@hotmail.com
2025-10-29 02:22:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:22:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:22:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:22:33 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com - URI: /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:22:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:22:33 [http-nio-8080-exec-1] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para email: cesar_2002_love@hotmail.com
2025-10-29 02:22:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:22:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:22:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:22:33 [http-nio-8080-exec-1] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: cesar_2002_love@hotmail.com
2025-10-29 02:35:06 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Starting BackendApplication using Java 21.0.2 with PID 11320 (D:\proyecto-ikaza-web\ikaza-backend\target\classes started by user in D:\proyecto-ikaza-web\ikaza-backend)
2025-10-29 02:35:06 [restartedMain] DEBUG p.c.ikaza.backend.BackendApplication - Running with Spring Boot v3.5.6, Spring v6.2.11
2025-10-29 02:35:06 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - The following 1 profile is active: "dev"
2025-10-29 02:35:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-29 02:35:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-29 02:35:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 02:35:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-29 02:35:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 156 ms. Found 12 JPA repository interfaces.
2025-10-29 02:35:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 02:35:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-10-29 02:35:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 1 MongoDB repository interface.
2025-10-29 02:35:12 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-29 02:35:12 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-29 02:35:12 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.46]
2025-10-29 02:35:12 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-29 02:35:12 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5869 ms
2025-10-29 02:35:13 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-29 02:35:13 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.29.Final
2025-10-29 02:35:13 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-29 02:35:14 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-29 02:35:14 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-29 02:35:15 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5d8fa582
2025-10-29 02:35:15 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-29 02:35:15 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-29 02:35:15 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-29 02:35:18 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-29 02:35:20 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-29 02:35:21 [restartedMain] DEBUG p.c.i.b.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-10-29 02:35:22 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-29 02:35:22 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-29 02:35:22 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-29 02:35:26 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.5.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.2+13-LTS-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@17596503, com.mongodb.Jep395RecordCodecProvider@2c9ed42, com.mongodb.KotlinCodecProvider@279f0ddf]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-10-29 02:35:26 [cluster-ClusterId{value='6901c3bd6cd487ccba3c85f4', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=246645000, minRoundTripTimeNanos=0}
2025-10-29 02:35:26 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-29 02:35:27 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-29 02:35:28 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-29 02:35:29 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-29 02:35:29 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Started BackendApplication in 23.867 seconds (process running for 25.153)
2025-10-29 02:35:39 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-29 02:35:39 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-29 02:35:39 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-10-29 02:35:39 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:35:39 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.JwtAuthenticationFilter - 🔓 No hay token Bearer en la petición - URI: /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:35:39 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:35:39 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-29 02:35:39 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-10-29 02:35:39 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:35:39 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-29 02:36:16 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/clientes/crear-perfil-inicial/cesar_2002_love@hotmail.com
2025-10-29 02:36:16 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.JwtAuthenticationFilter - 🔓 No hay token Bearer en la petición - URI: /api/clientes/crear-perfil-inicial/cesar_2002_love@hotmail.com
2025-10-29 02:36:16 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:36:16 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-29 02:36:16 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-10-29 02:36:16 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:36:16 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-29 02:36:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/clientes/crear-perfil-inicial{cesar_2002_love@hotmail.com}
2025-10-29 02:36:22 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.JwtAuthenticationFilter - 🔓 No hay token Bearer en la petición - URI: /api/clientes/crear-perfil-inicial%7Bcesar_2002_love@hotmail.com%7D
2025-10-29 02:36:22 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:36:22 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-29 02:36:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-10-29 02:36:22 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:36:22 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-29 02:36:30 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/clientes/crear-perfil-inicial(cesar_2002_love@hotmail.com)
2025-10-29 02:36:30 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.JwtAuthenticationFilter - 🔓 No hay token Bearer en la petición - URI: /api/clientes/crear-perfil-inicial(cesar_2002_love@hotmail.com)
2025-10-29 02:36:30 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:36:30 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-29 02:36:30 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-10-29 02:36:30 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:36:30 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-29 02:36:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/registro
2025-10-29 02:36:36 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:36:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/registro
2025-10-29 02:36:36 [http-nio-8080-exec-6] INFO  p.c.i.b.controller.AuthController - 📝 Intentando registrar usuario: ikazaimport@gmail.com
2025-10-29 02:36:36 [http-nio-8080-exec-6] INFO  p.c.i.backend.service.AuthService - 📝 Iniciando registro para: ikazaimport@gmail.com
2025-10-29 02:36:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-10-29 02:36:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        usuarios
        (activo, bloqueado_hasta, email, email_verificado, fecha_creacion, foto_perfil, intentos_fallidos, password, proveedor_auth, refresh_token, rol, token_expiracion, ultimo_acceso) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-29 02:36:37 [http-nio-8080-exec-6] INFO  p.c.i.backend.service.AuthService - ✅ Usuario registrado exitosamente - ID: 2
2025-10-29 02:36:37 [http-nio-8080-exec-6] INFO  p.c.i.backend.service.ClienteService - 📝 Creando perfil inicial Cliente para email: ikazaimport@gmail.com
2025-10-29 02:36:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:36:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:36:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        clientes
        (apellidos_cliente, fecha_actualizacion, fecha_nacimiento, genero, nombres_cliente, numero_documento, prefijo_telefono, telefono, telefono_verificado, tipo_documento, id_usuario) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-29 02:36:37 [http-nio-8080-exec-6] INFO  p.c.i.backend.service.ClienteService - ✅ Perfil Cliente inicial creado para Usuario ID: 2
2025-10-29 02:36:37 [http-nio-8080-exec-6] INFO  p.c.i.backend.service.ClienteService - 📋 Perfil incompleto para cliente con ID: 2
2025-10-29 02:36:37 [http-nio-8080-exec-6] INFO  p.c.i.backend.service.AuthService - ✅ Perfil Cliente inicial creado automáticamente para: ikazaimport@gmail.com
2025-10-29 02:36:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        usuarios 
    set
        activo=?,
        bloqueado_hasta=?,
        email=?,
        email_verificado=?,
        foto_perfil=?,
        intentos_fallidos=?,
        password=?,
        proveedor_auth=?,
        refresh_token=?,
        rol=?,
        token_expiracion=?,
        ultimo_acceso=? 
    where
        id_usuario=?
2025-10-29 02:36:37 [http-nio-8080-exec-6] INFO  p.c.i.b.controller.AuthController - ✅ Usuario registrado exitosamente: ikazaimport@gmail.com
2025-10-29 02:37:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-10-29 02:37:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:37:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-10-29 02:37:50 [http-nio-8080-exec-9] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'text/plain;charset=UTF-8' is not supported]
2025-10-29 02:38:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-10-29 02:38:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:38:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-10-29 02:38:01 [http-nio-8080-exec-1] INFO  p.c.i.b.controller.AuthController - 🔐 Intento de login para: cesar_2002_love@hotmail.com
2025-10-29 02:38:01 [http-nio-8080-exec-1] INFO  p.c.i.backend.service.AuthService - 🔐 Intento de login para: cesar_2002_love@hotmail.com
2025-10-29 02:38:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:38:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:38:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:38:02 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-29 02:38:02 [http-nio-8080-exec-1] INFO  p.c.i.backend.service.AuthService - ✅ Login exitoso para: cesar_2002_love@hotmail.com
2025-10-29 02:38:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        usuarios 
    set
        activo=?,
        bloqueado_hasta=?,
        email=?,
        email_verificado=?,
        foto_perfil=?,
        intentos_fallidos=?,
        password=?,
        proveedor_auth=?,
        refresh_token=?,
        rol=?,
        token_expiracion=?,
        ultimo_acceso=? 
    where
        id_usuario=?
2025-10-29 02:38:02 [http-nio-8080-exec-1] INFO  p.c.i.b.controller.AuthController - ✅ Login exitoso para: cesar_2002_love@hotmail.com
2025-10-29 02:39:31 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Starting BackendApplication using Java 21.0.2 with PID 11852 (D:\proyecto-ikaza-web\ikaza-backend\target\classes started by user in D:\proyecto-ikaza-web\ikaza-backend)
2025-10-29 02:39:31 [restartedMain] DEBUG p.c.ikaza.backend.BackendApplication - Running with Spring Boot v3.5.6, Spring v6.2.11
2025-10-29 02:39:31 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - The following 1 profile is active: "dev"
2025-10-29 02:39:31 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-29 02:39:31 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-29 02:39:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 02:39:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-29 02:39:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 158 ms. Found 12 JPA repository interfaces.
2025-10-29 02:39:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-29 02:39:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-10-29 02:39:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 1 MongoDB repository interface.
2025-10-29 02:39:36 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-29 02:39:36 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-29 02:39:36 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.46]
2025-10-29 02:39:36 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-29 02:39:36 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4792 ms
2025-10-29 02:39:37 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-29 02:39:37 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.29.Final
2025-10-29 02:39:37 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-29 02:39:37 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-29 02:39:38 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-29 02:39:38 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1f1098f7
2025-10-29 02:39:38 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-29 02:39:38 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-29 02:39:38 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-29 02:39:41 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-29 02:39:41 [restartedMain] DEBUG org.hibernate.SQL - 
    create table categorias (
        id_categoria bigint generated by default as identity,
        activo boolean not null,
        descripcion_categoria TEXT,
        fecha_creacion timestamp(6) not null,
        nombre_categoria varchar(100) not null,
        primary key (id_categoria)
    )
2025-10-29 02:39:41 [restartedMain] DEBUG org.hibernate.SQL - 
    create table clientes (
        id_cliente integer generated by default as identity,
        apellidos_cliente varchar(100) not null,
        fecha_actualizacion timestamp(6),
        fecha_nacimiento date,
        genero varchar(15),
        nombres_cliente varchar(100) not null,
        numero_documento varchar(20),
        prefijo_telefono varchar(5),
        telefono varchar(20),
        telefono_verificado boolean not null,
        tipo_documento varchar(20),
        id_usuario integer not null,
        primary key (id_cliente)
    )
2025-10-29 02:39:41 [restartedMain] DEBUG org.hibernate.SQL - 
    create table detalle_pedido (
        id_detalle bigint generated by default as identity,
        cantidad integer not null,
        color_seleccionado varchar(50),
        precio_unitario numeric(10,2) not null,
        subtotal numeric(10,2) not null,
        talla_seleccionada varchar(20),
        id_pedido bigint not null,
        id_producto bigint not null,
        primary key (id_detalle)
    )
2025-10-29 02:39:41 [restartedMain] DEBUG org.hibernate.SQL - 
    create table direcciones (
        id_direccion integer generated by default as identity,
        alias varchar(100),
        codigo_postal varchar(10),
        direccion varchar(255) not null,
        distrito varchar(100),
        es_principal BOOLEAN DEFAULT FALSE,
        fecha_creacion timestamp(6),
        id_usuario integer not null,
        latitud float(53),
        longitud float(53),
        pais varchar(100) not null,
        provincia varchar(100),
        referencia varchar(255),
        region varchar(100),
        primary key (id_direccion)
    )
2025-10-29 02:39:41 [restartedMain] DEBUG org.hibernate.SQL - 
    create table historial_estado_pedido (
        id_historial bigint generated by default as identity,
        estado_anterior varchar(30) check (estado_anterior in ('PENDIENTE','CONFIRMADO','PROCESANDO','EN_PREPARACION','ENVIADO','EN_TRANSITO','EN_REPARTO','ENTREGADO','CANCELADO','DEVUELTO')),
        estado_nuevo varchar(30) not null check (estado_nuevo in ('PENDIENTE','CONFIRMADO','PROCESANDO','EN_PREPARACION','ENVIADO','EN_TRANSITO','EN_REPARTO','ENTREGADO','CANCELADO','DEVUELTO')),
        fecha_cambio timestamp(6) not null,
        id_pedido bigint not null,
        primary key (id_historial)
    )
2025-10-29 02:39:41 [restartedMain] DEBUG org.hibernate.SQL - 
    create table inventario (
        id_inventario bigint generated by default as identity,
        fecha_actualizacion timestamp(6),
        stock_actual integer not null,
        stock_disponible integer,
        stock_reservado integer not null,
        id_producto bigint not null,
        primary key (id_inventario)
    )
2025-10-29 02:39:41 [restartedMain] DEBUG org.hibernate.SQL - 
    create table metodos_pago (
        id_metodo integer generated by default as identity,
        activo BOOLEAN DEFAULT TRUE not null,
        alias varchar(50),
        banco_emisor varchar(30),
        es_principal BOOLEAN DEFAULT FALSE not null,
        fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        fecha_expiracion varchar(7),
        id_usuario integer not null,
        nombre_titular varchar(100),
        tipo varchar(50) not null,
        tipo_tarjeta varchar(20),
        token_pago varchar(500) not null,
        ultimos_4_digitos varchar(4),
        primary key (id_metodo)
    )
2025-10-29 02:39:41 [restartedMain] DEBUG org.hibernate.SQL - 
    create table movimientos_inventario (
        id_movimiento bigint generated by default as identity,
        cantidad integer not null,
        fecha_movimiento timestamp(6) not null,
        motivo varchar(255),
        stock_anterior integer not null,
        stock_nuevo integer not null,
        tipo_movimiento varchar(50) not null check (tipo_movimiento in ('ENTRADA','SALIDA','AJUSTE','DEVOLUCION')),
        id_producto bigint not null,
        id_usuario integer,
        primary key (id_movimiento)
    )
2025-10-29 02:39:41 [restartedMain] DEBUG org.hibernate.SQL - 
    create table pagos (
        id_pago bigint generated by default as identity,
        banco_emisor varchar(30),
        datos_pasarela_json TEXT,
        estado varchar(30) check (estado in ('PENDIENTE','PROCESANDO','APROBADO','RECHAZADO','REEMBOLSADO')),
        fecha_creacion timestamp(6),
        fecha_pago timestamp(6),
        id_metodo bigint,
        metodo_usado varchar(50) not null check (metodo_usado in ('MERCADO_PAGO','CULQI','TRANSFERENCIA_BANCARIA','EFECTIVO_CONTRAENTREGA')),
        monto numeric(10,2) not null,
        referencia_pasarela varchar(150),
        tipo_tarjeta varchar(20),
        transaccion_externa_id varchar(200),
        ultimos_4_digitos varchar(4),
        id_pedido bigint not null,
        primary key (id_pago)
    )
2025-10-29 02:39:41 [restartedMain] DEBUG org.hibernate.SQL - 
    create table pedidos (
        id_pedido bigint generated by default as identity,
        estado varchar(30) not null check (estado in ('PENDIENTE','CONFIRMADO','PROCESANDO','EN_PREPARACION','ENVIADO','EN_TRANSITO','EN_REPARTO','ENTREGADO','CANCELADO','DEVUELTO')),
        estado_pago varchar(30) check (estado_pago in ('PENDIENTE','PROCESANDO','APROBADO','RECHAZADO','REEMBOLSADO')),
        fecha_pago timestamp(6),
        fecha_pedido timestamp(6) not null,
        id_usuario integer not null,
        metodo_pago varchar(30) check (metodo_pago in ('MERCADO_PAGO','CULQI','TRANSFERENCIA_BANCARIA','EFECTIVO_CONTRAENTREGA')),
        numero_pedido varchar(50) not null,
        subtotal numeric(10,2),
        total numeric(10,2) not null,
        transaccion_id varchar(100),
        primary key (id_pedido)
    )
2025-10-29 02:39:41 [restartedMain] DEBUG org.hibernate.SQL - 
    create table productos (
        id_producto bigint generated by default as identity,
        calificacion_promedio numeric(3,2),
        descripcion_producto varchar(500),
        fecha_actualizacion timestamp(6),
        fecha_creacion timestamp(6) not null,
        mongo_product_id varchar(24),
        nombre_producto varchar(200) not null,
        precio numeric(10,2) not null,
        stock integer not null,
        stock_minimo integer,
        id_categoria bigint not null,
        primary key (id_producto)
    )
2025-10-29 02:39:41 [restartedMain] DEBUG org.hibernate.SQL - 
    create table usuarios (
        id_usuario integer generated by default as identity,
        activo boolean not null,
        bloqueado_hasta timestamp(6),
        email varchar(150) not null,
        email_verificado boolean not null,
        fecha_creacion timestamp(6) not null,
        foto_perfil varchar(500),
        intentos_fallidos integer,
        password varchar(255) not null,
        proveedor_auth varchar(50),
        refresh_token varchar(500),
        rol varchar(50) not null,
        token_expiracion timestamp(6),
        ultimo_acceso timestamp(6),
        primary key (id_usuario)
    )
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists categorias 
       drop constraint if exists UK29mosksismnta90dn19gl3gr2
2025-10-29 02:39:42 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-10-29 02:39:42 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - no existe la restricción «uk29mosksismnta90dn19gl3gr2» en la relación «categorias», omitiendo
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists categorias 
       add constraint UK29mosksismnta90dn19gl3gr2 unique (nombre_categoria)
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists clientes 
       drop constraint if exists UK2viccgf178bd74vfbq8ctsv8t
2025-10-29 02:39:42 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-10-29 02:39:42 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - no existe la restricción «uk2viccgf178bd74vfbq8ctsv8t» en la relación «clientes», omitiendo
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists clientes 
       add constraint UK2viccgf178bd74vfbq8ctsv8t unique (numero_documento)
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists clientes 
       drop constraint if exists UKl8nfa1qkfrk958v1rx9h8anvb
2025-10-29 02:39:42 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-10-29 02:39:42 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - no existe la restricción «ukl8nfa1qkfrk958v1rx9h8anvb» en la relación «clientes», omitiendo
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists clientes 
       add constraint UKl8nfa1qkfrk958v1rx9h8anvb unique (id_usuario)
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists inventario 
       drop constraint if exists UKtlye33nglhh35y08rxqrumnfw
2025-10-29 02:39:42 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-10-29 02:39:42 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - no existe la restricción «uktlye33nglhh35y08rxqrumnfw» en la relación «inventario», omitiendo
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists inventario 
       add constraint UKtlye33nglhh35y08rxqrumnfw unique (id_producto)
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists pagos 
       drop constraint if exists UKhllc72uwnsxv6imjsttp92wyx
2025-10-29 02:39:42 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-10-29 02:39:42 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - no existe la restricción «ukhllc72uwnsxv6imjsttp92wyx» en la relación «pagos», omitiendo
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists pagos 
       add constraint UKhllc72uwnsxv6imjsttp92wyx unique (id_pedido)
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists pedidos 
       drop constraint if exists UK6ywv5771tibn93splh6t3ft06
2025-10-29 02:39:42 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-10-29 02:39:42 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - no existe la restricción «uk6ywv5771tibn93splh6t3ft06» en la relación «pedidos», omitiendo
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint UK6ywv5771tibn93splh6t3ft06 unique (numero_pedido)
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists usuarios 
       drop constraint if exists UKkfsp0s1tflm1cwlj8idhqsad0
2025-10-29 02:39:42 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-10-29 02:39:42 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - no existe la restricción «ukkfsp0s1tflm1cwlj8idhqsad0» en la relación «usuarios», omitiendo
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists usuarios 
       add constraint UKkfsp0s1tflm1cwlj8idhqsad0 unique (email)
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists clientes 
       add constraint FKf6u564o4dprnq7uln5gjvidp3 
       foreign key (id_usuario) 
       references usuarios
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists detalle_pedido 
       add constraint FKh10qteor08f4cbxhsf97qtgyk 
       foreign key (id_pedido) 
       references pedidos
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists detalle_pedido 
       add constraint FKnwadx4gon4by0uw748yo8chit 
       foreign key (id_producto) 
       references productos
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists direcciones 
       add constraint FKk9knhuryk5fsqnn5blyo4f57 
       foreign key (id_usuario) 
       references usuarios
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists historial_estado_pedido 
       add constraint FKgnk4rqligw1d57to3x7juihk4 
       foreign key (id_pedido) 
       references pedidos
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists inventario 
       add constraint FK92r6ui4b0u2kxqad8cyiusrdn 
       foreign key (id_producto) 
       references productos
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists metodos_pago 
       add constraint FKaoiyjy5dag150kny8b2xw1ut8 
       foreign key (id_usuario) 
       references usuarios
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists movimientos_inventario 
       add constraint FK7ttlcxcscpdu0wa9vhq6celdu 
       foreign key (id_producto) 
       references productos
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists movimientos_inventario 
       add constraint FKox35q6568f5qoh8ii09cihhqt 
       foreign key (id_usuario) 
       references usuarios
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists pagos 
       add constraint FKrfg5sdbj438hkscav9i92bmct 
       foreign key (id_pedido) 
       references pedidos
2025-10-29 02:39:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists productos 
       add constraint FKdtoa37luoxhhvbicrfiu5ygbj 
       foreign key (id_categoria) 
       references categorias
2025-10-29 02:39:42 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-29 02:39:42 [restartedMain] DEBUG p.c.i.b.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-10-29 02:39:43 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-29 02:39:43 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-29 02:39:43 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-29 02:39:46 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.5.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.2+13-LTS-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@21903dac, com.mongodb.Jep395RecordCodecProvider@5a662c43, com.mongodb.KotlinCodecProvider@2127becd]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-10-29 02:39:46 [cluster-ClusterId{value='6901c4c28d08a200748e5e3b', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=88405300, minRoundTripTimeNanos=0}
2025-10-29 02:39:46 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-29 02:39:47 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-29 02:39:48 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-29 02:39:48 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-29 02:39:48 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Started BackendApplication in 18.316 seconds (process running for 19.417)
2025-10-29 02:40:54 [http-nio-8080-exec-7] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-29 02:40:54 [http-nio-8080-exec-7] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-29 02:40:54 [http-nio-8080-exec-7] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-10-29 02:40:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-vendido
2025-10-29 02:40:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-baratos?limite=12
2025-10-29 02:40:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/por-agotarse?limite=12
2025-10-29 02:40:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-recientes?limite=12
2025-10-29 02:40:54 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:40:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:40:54 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:40:54 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:40:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-vendido
2025-10-29 02:40:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/por-agotarse?limite=12
2025-10-29 02:40:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-recientes?limite=12
2025-10-29 02:40:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-baratos?limite=12
2025-10-29 02:40:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.precio 
    fetch
        first ? rows only
2025-10-29 02:40:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.fecha_creacion desc 
    fetch
        first ? rows only
2025-10-29 02:40:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.calificacion_promedio desc,
        p1_0.fecha_creacion desc 
    fetch
        first 1 rows only
2025-10-29 02:40:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock between 5 and 10 
    order by
        p1_0.stock 
    fetch
        first ? rows only
2025-10-29 02:42:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/registro
2025-10-29 02:42:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:42:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/registro
2025-10-29 02:42:00 [http-nio-8080-exec-9] INFO  p.c.i.b.controller.AuthController - 📝 Intentando registrar usuario: cesar_2002_love@hotmail.com
2025-10-29 02:42:00 [http-nio-8080-exec-9] INFO  p.c.i.backend.service.AuthService - 📝 Iniciando registro para: cesar_2002_love@hotmail.com
2025-10-29 02:42:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-10-29 02:42:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        usuarios
        (activo, bloqueado_hasta, email, email_verificado, fecha_creacion, foto_perfil, intentos_fallidos, password, proveedor_auth, refresh_token, rol, token_expiracion, ultimo_acceso) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-29 02:42:01 [http-nio-8080-exec-9] INFO  p.c.i.backend.service.AuthService - ✅ Usuario registrado exitosamente - ID: 1
2025-10-29 02:42:01 [http-nio-8080-exec-9] INFO  p.c.i.backend.service.ClienteService - 📝 Creando perfil inicial Cliente para email: cesar_2002_love@hotmail.com
2025-10-29 02:42:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:42:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:42:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        clientes
        (apellidos_cliente, fecha_actualizacion, fecha_nacimiento, genero, nombres_cliente, numero_documento, prefijo_telefono, telefono, telefono_verificado, tipo_documento, id_usuario) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-29 02:42:01 [http-nio-8080-exec-9] INFO  p.c.i.backend.service.ClienteService - ✅ Perfil Cliente inicial creado para Usuario ID: 1
2025-10-29 02:42:01 [http-nio-8080-exec-9] INFO  p.c.i.backend.service.ClienteService - 📋 Perfil incompleto para cliente con ID: 1
2025-10-29 02:42:01 [http-nio-8080-exec-9] INFO  p.c.i.backend.service.AuthService - ✅ Perfil Cliente inicial creado automáticamente para: cesar_2002_love@hotmail.com
2025-10-29 02:42:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        usuarios 
    set
        activo=?,
        bloqueado_hasta=?,
        email=?,
        email_verificado=?,
        foto_perfil=?,
        intentos_fallidos=?,
        password=?,
        proveedor_auth=?,
        refresh_token=?,
        rol=?,
        token_expiracion=?,
        ultimo_acceso=? 
    where
        id_usuario=?
2025-10-29 02:42:01 [http-nio-8080-exec-9] INFO  p.c.i.b.controller.AuthController - ✅ Usuario registrado exitosamente: cesar_2002_love@hotmail.com
2025-10-29 02:42:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:42:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:42:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:42:01 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com - URI: /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:42:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:42:01 [http-nio-8080-exec-10] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para email: cesar_2002_love@hotmail.com
2025-10-29 02:42:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:42:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:42:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:42:01 [http-nio-8080-exec-10] INFO  p.c.i.backend.service.ClienteService - 📋 Perfil incompleto para cliente con ID: 1
2025-10-29 02:42:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:42:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:42:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:42:01 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com - URI: /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:42:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:42:01 [http-nio-8080-exec-6] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para email: cesar_2002_love@hotmail.com
2025-10-29 02:42:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:42:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:42:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:42:01 [http-nio-8080-exec-6] INFO  p.c.i.backend.service.ClienteService - 📋 Perfil incompleto para cliente con ID: 1
2025-10-29 02:42:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:42:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:42:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:42:09 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com - URI: /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:42:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:42:09 [http-nio-8080-exec-2] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para email: cesar_2002_love@hotmail.com
2025-10-29 02:42:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:42:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:42:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:42:09 [http-nio-8080-exec-2] INFO  p.c.i.backend.service.ClienteService - 📋 Perfil incompleto para cliente con ID: 1
2025-10-29 02:43:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:43:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:43:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:43:03 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com - URI: /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:43:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:43:03 [http-nio-8080-exec-5] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para email: cesar_2002_love@hotmail.com
2025-10-29 02:43:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:43:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:43:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:43:03 [http-nio-8080-exec-5] INFO  p.c.i.backend.service.ClienteService - 📋 Perfil incompleto para cliente con ID: 1
2025-10-29 02:43:16 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/usuarios/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:43:16 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/usuarios/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:43:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:43:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:43:16 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com - URI: /api/usuarios/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:43:16 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/usuarios/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:43:16 [http-nio-8080-exec-9] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/usuarios/perfil/cesar_2002_love@hotmail.com.]
2025-10-29 02:44:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/usuarios/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:44:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:44:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:44:15 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com - URI: /api/usuarios/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:44:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/usuarios/perfil/cesar_2002_love@hotmail.com
2025-10-29 02:44:15 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/usuarios/perfil/cesar_2002_love@hotmail.com.]
2025-10-29 02:44:35 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/usuarios/direcciones
2025-10-29 02:44:35 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/usuarios/direcciones
2025-10-29 02:44:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:44:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:44:35 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com - URI: /api/usuarios/direcciones
2025-10-29 02:44:35 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/usuarios/direcciones
2025-10-29 02:44:35 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity pe.com.ikaza.backend.controller.DireccionController.cargarDirecciones(); target is of class [pe.com.ikaza.backend.controller.DireccionController]
2025-10-29 02:44:35 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity pe.com.ikaza.backend.controller.DireccionController.cargarDirecciones(); target is of class [pe.com.ikaza.backend.controller.DireccionController]
2025-10-29 02:44:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:44:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:44:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_direccion,
        d1_0.alias,
        d1_0.codigo_postal,
        d1_0.direccion,
        d1_0.distrito,
        d1_0.es_principal,
        d1_0.fecha_creacion,
        d1_0.id_usuario,
        d1_0.latitud,
        d1_0.longitud,
        d1_0.pais,
        d1_0.provincia,
        d1_0.referencia,
        d1_0.region 
    from
        direcciones d1_0 
    where
        d1_0.id_usuario=?
2025-10-29 02:44:44 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/logout?email=cesar_2002_love@hotmail.com
2025-10-29 02:44:44 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout?email=cesar_2002_love@hotmail.com
2025-10-29 02:44:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:44:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:44:44 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com - URI: /api/auth/logout
2025-10-29 02:44:44 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout?email=cesar_2002_love@hotmail.com
2025-10-29 02:44:44 [http-nio-8080-exec-3] INFO  p.c.i.b.controller.AuthController - 👋 Cerrando sesión para: cesar_2002_love@hotmail.com
2025-10-29 02:44:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:44:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:44:44 [http-nio-8080-exec-3] INFO  p.c.i.backend.service.AuthService - 👋 Logout exitoso para: cesar_2002_love@hotmail.com
2025-10-29 02:44:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        usuarios 
    set
        activo=?,
        bloqueado_hasta=?,
        email=?,
        email_verificado=?,
        foto_perfil=?,
        intentos_fallidos=?,
        password=?,
        proveedor_auth=?,
        refresh_token=?,
        rol=?,
        token_expiracion=?,
        ultimo_acceso=? 
    where
        id_usuario=?
2025-10-29 02:44:44 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-vendido
2025-10-29 02:44:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-recientes?limite=12
2025-10-29 02:44:44 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:44:44 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-vendido
2025-10-29 02:44:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:44:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-recientes?limite=12
2025-10-29 02:44:44 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/por-agotarse?limite=12
2025-10-29 02:44:44 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-baratos?limite=12
2025-10-29 02:44:44 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:44:44 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/por-agotarse?limite=12
2025-10-29 02:44:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.calificacion_promedio desc,
        p1_0.fecha_creacion desc 
    fetch
        first 1 rows only
2025-10-29 02:44:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.fecha_creacion desc 
    fetch
        first ? rows only
2025-10-29 02:44:44 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:44:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock between 5 and 10 
    order by
        p1_0.stock 
    fetch
        first ? rows only
2025-10-29 02:44:44 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-baratos?limite=12
2025-10-29 02:44:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.precio 
    fetch
        first ? rows only
2025-10-29 02:45:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/registro
2025-10-29 02:45:24 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:45:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/registro
2025-10-29 02:45:24 [http-nio-8080-exec-3] INFO  p.c.i.b.controller.AuthController - 📝 Intentando registrar usuario: ikazaimport@gmail.com
2025-10-29 02:45:24 [http-nio-8080-exec-3] INFO  p.c.i.backend.service.AuthService - 📝 Iniciando registro para: ikazaimport@gmail.com
2025-10-29 02:45:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-10-29 02:45:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        usuarios
        (activo, bloqueado_hasta, email, email_verificado, fecha_creacion, foto_perfil, intentos_fallidos, password, proveedor_auth, refresh_token, rol, token_expiracion, ultimo_acceso) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-29 02:45:24 [http-nio-8080-exec-3] INFO  p.c.i.backend.service.AuthService - ✅ Usuario registrado exitosamente - ID: 2
2025-10-29 02:45:24 [http-nio-8080-exec-3] INFO  p.c.i.backend.service.ClienteService - 📝 Creando perfil inicial Cliente para email: ikazaimport@gmail.com
2025-10-29 02:45:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:45:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:45:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        clientes
        (apellidos_cliente, fecha_actualizacion, fecha_nacimiento, genero, nombres_cliente, numero_documento, prefijo_telefono, telefono, telefono_verificado, tipo_documento, id_usuario) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-29 02:45:24 [http-nio-8080-exec-3] INFO  p.c.i.backend.service.ClienteService - ✅ Perfil Cliente inicial creado para Usuario ID: 2
2025-10-29 02:45:24 [http-nio-8080-exec-3] INFO  p.c.i.backend.service.ClienteService - 📋 Perfil incompleto para cliente con ID: 2
2025-10-29 02:45:24 [http-nio-8080-exec-3] INFO  p.c.i.backend.service.AuthService - ✅ Perfil Cliente inicial creado automáticamente para: ikazaimport@gmail.com
2025-10-29 02:45:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        usuarios 
    set
        activo=?,
        bloqueado_hasta=?,
        email=?,
        email_verificado=?,
        foto_perfil=?,
        intentos_fallidos=?,
        password=?,
        proveedor_auth=?,
        refresh_token=?,
        rol=?,
        token_expiracion=?,
        ultimo_acceso=? 
    where
        id_usuario=?
2025-10-29 02:45:24 [http-nio-8080-exec-3] INFO  p.c.i.b.controller.AuthController - ✅ Usuario registrado exitosamente: ikazaimport@gmail.com
2025-10-29 02:45:24 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:24 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:24 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:45:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:45:24 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: ikazaimport@gmail.com - URI: /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:24 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:24 [http-nio-8080-exec-4] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para email: ikazaimport@gmail.com
2025-10-29 02:45:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:45:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:45:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:45:24 [http-nio-8080-exec-4] INFO  p.c.i.backend.service.ClienteService - 📋 Perfil incompleto para cliente con ID: 2
2025-10-29 02:45:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:45:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:45:24 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: ikazaimport@gmail.com - URI: /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:24 [http-nio-8080-exec-9] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para email: ikazaimport@gmail.com
2025-10-29 02:45:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:45:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:45:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:45:24 [http-nio-8080-exec-9] INFO  p.c.i.backend.service.ClienteService - 📋 Perfil incompleto para cliente con ID: 2
2025-10-29 02:45:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-10-29 02:45:36 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:45:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-10-29 02:45:36 [http-nio-8080-exec-2] INFO  p.c.i.b.controller.AuthController - 🔐 Intento de login para: ikazaimport@gmail.com
2025-10-29 02:45:36 [http-nio-8080-exec-2] INFO  p.c.i.backend.service.AuthService - 🔐 Intento de login para: ikazaimport@gmail.com
2025-10-29 02:45:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:45:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:45:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:45:37 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-29 02:45:37 [http-nio-8080-exec-2] INFO  p.c.i.backend.service.AuthService - ✅ Login exitoso para: ikazaimport@gmail.com
2025-10-29 02:45:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        usuarios 
    set
        activo=?,
        bloqueado_hasta=?,
        email=?,
        email_verificado=?,
        foto_perfil=?,
        intentos_fallidos=?,
        password=?,
        proveedor_auth=?,
        refresh_token=?,
        rol=?,
        token_expiracion=?,
        ultimo_acceso=? 
    where
        id_usuario=?
2025-10-29 02:45:37 [http-nio-8080-exec-2] INFO  p.c.i.b.controller.AuthController - ✅ Login exitoso para: ikazaimport@gmail.com
2025-10-29 02:45:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:45:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:45:37 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: ikazaimport@gmail.com - URI: /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:37 [http-nio-8080-exec-10] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para email: ikazaimport@gmail.com
2025-10-29 02:45:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:45:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:45:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:45:37 [http-nio-8080-exec-10] INFO  p.c.i.backend.service.ClienteService - 📋 Perfil incompleto para cliente con ID: 2
2025-10-29 02:45:37 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:45:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:45:37 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: ikazaimport@gmail.com - URI: /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:37 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:37 [http-nio-8080-exec-1] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para email: ikazaimport@gmail.com
2025-10-29 02:45:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:45:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:45:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:45:37 [http-nio-8080-exec-1] INFO  p.c.i.backend.service.ClienteService - 📋 Perfil incompleto para cliente con ID: 2
2025-10-29 02:45:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:45:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:45:37 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: ikazaimport@gmail.com - URI: /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:45:37 [http-nio-8080-exec-6] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para email: ikazaimport@gmail.com
2025-10-29 02:45:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:45:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:45:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-29 02:45:37 [http-nio-8080-exec-6] INFO  p.c.i.backend.service.ClienteService - 📋 Perfil incompleto para cliente con ID: 2
2025-10-29 02:45:42 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/logout?email=ikazaimport@gmail.com
2025-10-29 02:45:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout?email=ikazaimport@gmail.com
2025-10-29 02:45:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:45:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:45:42 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: ikazaimport@gmail.com - URI: /api/auth/logout
2025-10-29 02:45:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout?email=ikazaimport@gmail.com
2025-10-29 02:45:42 [http-nio-8080-exec-3] INFO  p.c.i.b.controller.AuthController - 👋 Cerrando sesión para: ikazaimport@gmail.com
2025-10-29 02:45:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:45:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:45:42 [http-nio-8080-exec-3] INFO  p.c.i.backend.service.AuthService - 👋 Logout exitoso para: ikazaimport@gmail.com
2025-10-29 02:45:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        usuarios 
    set
        activo=?,
        bloqueado_hasta=?,
        email=?,
        email_verificado=?,
        foto_perfil=?,
        intentos_fallidos=?,
        password=?,
        proveedor_auth=?,
        refresh_token=?,
        rol=?,
        token_expiracion=?,
        ultimo_acceso=? 
    where
        id_usuario=?
2025-10-29 02:45:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-vendido
2025-10-29 02:45:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:45:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-vendido
2025-10-29 02:45:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.calificacion_promedio desc,
        p1_0.fecha_creacion desc 
    fetch
        first 1 rows only
2025-10-29 02:45:44 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/por-agotarse?limite=12
2025-10-29 02:45:44 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:45:44 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/por-agotarse?limite=12
2025-10-29 02:45:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock between 5 and 10 
    order by
        p1_0.stock 
    fetch
        first ? rows only
2025-10-29 02:45:44 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-recientes?limite=12
2025-10-29 02:45:44 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:45:44 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-recientes?limite=12
2025-10-29 02:45:44 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-baratos?limite=12
2025-10-29 02:45:44 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:45:44 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-baratos?limite=12
2025-10-29 02:45:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.fecha_creacion desc 
    fetch
        first ? rows only
2025-10-29 02:45:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.precio 
    fetch
        first ? rows only
2025-10-29 02:46:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-10-29 02:46:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:46:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-10-29 02:46:54 [http-nio-8080-exec-6] INFO  p.c.i.b.controller.AuthController - 🔐 Intento de login para: ikazaimport@gmail.com
2025-10-29 02:46:54 [http-nio-8080-exec-6] INFO  p.c.i.backend.service.AuthService - 🔐 Intento de login para: ikazaimport@gmail.com
2025-10-29 02:46:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:46:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:46:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:46:54 [http-nio-8080-exec-6] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-29 02:46:54 [http-nio-8080-exec-6] INFO  p.c.i.backend.service.AuthService - ✅ Login exitoso para: ikazaimport@gmail.com
2025-10-29 02:46:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        usuarios 
    set
        activo=?,
        bloqueado_hasta=?,
        email=?,
        email_verificado=?,
        foto_perfil=?,
        intentos_fallidos=?,
        password=?,
        proveedor_auth=?,
        refresh_token=?,
        rol=?,
        token_expiracion=?,
        ultimo_acceso=? 
    where
        id_usuario=?
2025-10-29 02:46:54 [http-nio-8080-exec-6] INFO  p.c.i.b.controller.AuthController - ✅ Login exitoso para: ikazaimport@gmail.com
2025-10-29 02:46:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:46:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:46:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:46:54 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: ikazaimport@gmail.com - URI: /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:46:54 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AccessDeniedHandlerImpl - Responding with 403 status code
2025-10-29 02:46:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-10-29 02:46:54 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:46:54 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-29 02:46:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:46:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.bloqueado_hasta,
        u1_0.email,
        u1_0.email_verificado,
        u1_0.fecha_creacion,
        u1_0.foto_perfil,
        u1_0.intentos_fallidos,
        u1_0.password,
        u1_0.proveedor_auth,
        u1_0.refresh_token,
        u1_0.rol,
        u1_0.token_expiracion,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-29 02:46:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-29 02:46:54 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.JwtAuthenticationFilter - ✅ Usuario autenticado: ikazaimport@gmail.com - URI: /api/clientes/perfil/ikazaimport@gmail.com
2025-10-29 02:46:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AccessDeniedHandlerImpl - Responding with 403 status code
2025-10-29 02:46:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-10-29 02:46:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:46:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-29 02:47:29 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/categorias
2025-10-29 02:47:29 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:47:29 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/categorias
2025-10-29 02:47:29 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos?page=0&size=1000&sort=nombreProducto&direction=ASC
2025-10-29 02:47:29 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:47:29 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos?page=0&size=1000&sort=nombreProducto&direction=ASC
2025-10-29 02:47:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.activo 
    order by
        c1_0.nombre_categoria
2025-10-29 02:47:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.nombre_producto 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-29 02:47:29 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/categorias
2025-10-29 02:47:29 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 02:47:29 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/categorias
2025-10-29 02:47:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.activo 
    order by
        c1_0.nombre_categoria
2025-10-29 02:47:29 [http-nio-8080-exec-5] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-10-29 03:00:49 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-recientes?limite=12
2025-10-29 03:00:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-vendido
2025-10-29 03:00:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-baratos?limite=12
2025-10-29 03:00:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/por-agotarse?limite=12
2025-10-29 03:00:49 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 03:00:49 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 03:00:49 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 03:00:49 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-29 03:00:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-baratos?limite=12
2025-10-29 03:00:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/por-agotarse?limite=12
2025-10-29 03:00:49 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-recientes?limite=12
2025-10-29 03:00:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-vendido
2025-10-29 03:00:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.calificacion_promedio desc,
        p1_0.fecha_creacion desc 
    fetch
        first 1 rows only
2025-10-29 03:00:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock between 5 and 10 
    order by
        p1_0.stock 
    fetch
        first ? rows only
2025-10-29 03:00:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.precio 
    fetch
        first ? rows only
2025-10-29 03:00:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.fecha_creacion desc 
    fetch
        first ? rows only
