2025-10-26 00:26:01 [scheduling-1] INFO  p.c.i.backend.service.PedidoService - 🧹 Iniciando limpieza de pedidos preliminares antiguos...
2025-10-26 00:26:03 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_pedido,
        p1_0.estado,
        p1_0.estado_pago,
        p1_0.fecha_pago,
        p1_0.fecha_pedido,
        p1_0.id_usuario,
        p1_0.metodo_pago,
        p1_0.numero_pedido,
        p1_0.subtotal,
        p1_0.total,
        p1_0.transaccion_id 
    from
        pedidos p1_0 
    where
        p1_0.estado=? 
        and p1_0.metodo_pago=? 
        and p1_0.fecha_pedido<?
2025-10-26 00:26:03 [scheduling-1] INFO  p.c.i.backend.service.PedidoService - ✅ Limpieza finalizada. Pedidos eliminados: 0
2025-10-26 00:48:24 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos?page=0&size=1000&sort=nombreProducto&direction=ASC
2025-10-26 00:48:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/categorias
2025-10-26 00:48:27 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos
2025-10-26 00:48:27 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/categorias
2025-10-26 00:48:27 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-26 00:48:27 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-26 00:48:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos?page=0&size=1000&sort=nombreProducto&direction=ASC
2025-10-26 00:48:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/categorias
2025-10-26 00:48:27 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos
2025-10-26 00:48:27 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/categorias
2025-10-26 00:48:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.nombre_producto 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-26 00:48:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.activo 
    order by
        c1_0.nombre_categoria
2025-10-26 00:49:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/login-token
2025-10-26 00:49:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login-token
2025-10-26 00:49:37 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/auth/login-token
2025-10-26 00:49:37 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-26 00:49:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login-token
2025-10-26 00:49:37 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/auth/login-token
2025-10-26 00:49:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-26 00:49:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-26 00:49:40 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-26 00:49:41 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: 8wt28JyURmakufMgVHetif7bWaB2, Email: paulomoronpoma@gmail.com
2025-10-26 00:49:42 [http-nio-8080-exec-3] INFO  p.c.i.b.controller.AuthController - 🔐 Intento de login con token (Social/Estandar)
2025-10-26 00:49:42 [http-nio-8080-exec-3] INFO  p.c.i.backend.service.AuthService - Verificando ID Token de Firebase para login/sincronización...
2025-10-26 00:49:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-26 00:49:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-26 00:49:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-26 00:49:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-26 00:49:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-26 00:49:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-26 00:49:44 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de Firebase claims: CLIENTE
2025-10-26 00:49:44 [http-nio-8080-exec-5] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: paulomoronpoma@gmail.com (rol: CLIENTE)
2025-10-26 00:49:44 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-26 00:49:44 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-26 00:49:45 [http-nio-8080-exec-5] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: 8wt28JyURmakufMgVHetif7bWaB2
2025-10-26 00:49:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-26 00:49:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-26 00:49:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-26 00:49:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-26 00:49:45 [http-nio-8080-exec-3] INFO  p.c.i.backend.service.AuthService - Sincronización/Login exitoso para: paulomoronpoma@gmail.com
2025-10-26 00:49:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        usuarios 
    set
        activo=?,
        email=?,
        fecha_actualizacion=?,
        firebase_uid=?,
        password=?,
        id_rol=?,
        ultimo_acceso=? 
    where
        id_usuario=?
2025-10-26 00:49:48 [http-nio-8080-exec-3] INFO  p.c.i.b.controller.AuthController - ✅ Login/Sincronización exitosa para UID: 8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 00:40:56 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Starting BackendApplication using Java 21.0.2 with PID 15956 (D:\proyecto-ikaza-web\ikaza-backend\target\classes started by user in D:\proyecto-ikaza-web\ikaza-backend)
2025-10-27 00:40:56 [restartedMain] DEBUG p.c.ikaza.backend.BackendApplication - Running with Spring Boot v3.5.6, Spring v6.2.11
2025-10-27 00:40:56 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - The following 1 profile is active: "dev"
2025-10-27 00:40:56 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-27 00:40:56 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-27 00:40:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-27 00:40:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-27 00:40:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 121 ms. Found 13 JPA repository interfaces.
2025-10-27 00:40:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-27 00:40:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-10-27 00:40:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 1 MongoDB repository interface.
2025-10-27 00:40:59 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-27 00:40:59 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-27 00:40:59 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.46]
2025-10-27 00:40:59 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-27 00:40:59 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3467 ms
2025-10-27 00:41:00 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-27 00:41:00 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.29.Final
2025-10-27 00:41:00 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-27 00:41:01 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-27 00:41:01 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-27 00:41:04 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@37c961b8
2025-10-27 00:41:04 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-27 00:41:04 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-27 00:41:05 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-27 00:41:07 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-27 00:41:11 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-27 00:41:11 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-27 00:41:12 [restartedMain] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - Filter 'firebaseAuthTokenFilter' configured for use
2025-10-27 00:41:15 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.5.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.2+13-LTS-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6db515f3, com.mongodb.Jep395RecordCodecProvider@1b05de83, com.mongodb.KotlinCodecProvider@683d6fb2]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-10-27 00:41:15 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-27 00:41:16 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-27 00:41:16 [cluster-ClusterId{value='68ff05fbe314c10879831f85', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1006148000, minRoundTripTimeNanos=0}
2025-10-27 00:41:16 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-10-27 00:41:16 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/inventario/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-10-27 00:41:16 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, FirebaseAuthTokenFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-27 00:41:17 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-27 00:41:17 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Started BackendApplication in 22.709 seconds (process running for 23.874)
2025-10-27 01:27:35 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Starting BackendApplication using Java 21.0.2 with PID 17264 (D:\proyecto-ikaza-web\ikaza-backend\target\classes started by user in D:\proyecto-ikaza-web\ikaza-backend)
2025-10-27 01:27:35 [restartedMain] DEBUG p.c.ikaza.backend.BackendApplication - Running with Spring Boot v3.5.6, Spring v6.2.11
2025-10-27 01:27:35 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - The following 1 profile is active: "dev"
2025-10-27 01:27:35 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-27 01:27:35 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-27 01:27:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-27 01:27:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-27 01:27:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 123 ms. Found 13 JPA repository interfaces.
2025-10-27 01:27:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-27 01:27:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-10-27 01:27:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 1 MongoDB repository interface.
2025-10-27 01:27:38 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-27 01:27:38 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-27 01:27:38 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.46]
2025-10-27 01:27:38 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-27 01:27:38 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3372 ms
2025-10-27 01:27:39 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-27 01:27:39 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.29.Final
2025-10-27 01:27:39 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-27 01:27:40 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-27 01:27:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-27 01:27:40 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7e0e982f
2025-10-27 01:27:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-27 01:27:41 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-27 01:27:41 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-27 01:27:43 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-27 01:27:46 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-27 01:27:46 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-27 01:27:47 [restartedMain] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - Filter 'firebaseAuthTokenFilter' configured for use
2025-10-27 01:27:49 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.5.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.2+13-LTS-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@627101b, com.mongodb.Jep395RecordCodecProvider@3d2c7440, com.mongodb.KotlinCodecProvider@263c2cad]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-10-27 01:27:49 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-27 01:27:50 [cluster-ClusterId{value='68ff10e51f17c7b264576c94', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=260691200, minRoundTripTimeNanos=0}
2025-10-27 01:27:50 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-27 01:27:50 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-10-27 01:27:51 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/inventario/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-10-27 01:27:51 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, FirebaseAuthTokenFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-27 01:27:51 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-27 01:27:51 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Started BackendApplication in 17.464 seconds (process running for 18.546)
2025-10-27 01:30:48 [http-nio-8080-exec-4] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-27 01:30:48 [http-nio-8080-exec-4] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-27 01:30:48 [http-nio-8080-exec-4] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-10-27 01:30:48 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-baratos?limite=12
2025-10-27 01:30:48 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-vendido
2025-10-27 01:30:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-recientes?limite=12
2025-10-27 01:30:48 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/por-agotarse?limite=12
2025-10-27 01:30:48 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 01:30:48 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 01:30:48 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 01:30:48 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 01:30:48 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:30:48 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:30:48 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:30:48 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:30:48 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-baratos?limite=12
2025-10-27 01:30:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-recientes?limite=12
2025-10-27 01:30:48 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/por-agotarse?limite=12
2025-10-27 01:30:48 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-vendido
2025-10-27 01:30:48 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 01:30:48 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 01:30:48 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 01:30:48 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 01:30:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.precio 
    fetch
        first ? rows only
2025-10-27 01:30:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock between 5 and 10 
    order by
        p1_0.stock 
    fetch
        first ? rows only
2025-10-27 01:30:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.fecha_creacion desc 
    fetch
        first ? rows only
2025-10-27 01:30:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.calificacion_promedio desc,
        p1_0.fecha_creacion desc 
    fetch
        first 1 rows only
2025-10-27 01:30:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:30:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:30:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:30:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:30:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:30:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:30:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:30:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:30:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:30:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:30:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:30:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:30:52 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:30:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:30:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:30:52 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:30:53 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: 8wt28JyURmakufMgVHetif7bWaB2, Email: paulomoronpoma@gmail.com
2025-10-27 01:30:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:30:53 [http-nio-8080-exec-7] WARN  p.c.i.b.s.FirebaseAuthTokenFilter - ⚠️ Usuario no encontrado en BD - UID: 8wt28JyURmakufMgVHetif7bWaB2. Debe registrarse primero.
2025-10-27 01:30:53 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:30:53 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:30:53 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-10-27 01:30:53 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:30:53 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:30:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:30:53 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:30:53 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: 8wt28JyURmakufMgVHetif7bWaB2, Email: paulomoronpoma@gmail.com
2025-10-27 01:30:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:30:53 [http-nio-8080-exec-2] WARN  p.c.i.b.s.FirebaseAuthTokenFilter - ⚠️ Usuario no encontrado en BD - UID: 8wt28JyURmakufMgVHetif7bWaB2. Debe registrarse primero.
2025-10-27 01:30:53 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:30:53 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:30:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-10-27 01:30:53 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:30:53 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:30:53 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:30:53 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:30:53 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔐 No hay token Bearer - URI: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2. Spring Security manejará la auth.
2025-10-27 01:30:53 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:30:53 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:30:53 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-10-27 01:30:53 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:30:53 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:30:53 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:30:53 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:30:53 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔐 No hay token Bearer - URI: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2. Spring Security manejará la auth.
2025-10-27 01:30:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:30:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:30:53 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-10-27 01:30:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:30:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:35:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/productos?page=0&size=1000&sort=nombreProducto&direction=ASC
2025-10-27 01:35:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos?page=0&size=1000&sort=nombreProducto&direction=ASC
2025-10-27 01:35:40 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos
2025-10-27 01:35:40 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:35:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos?page=0&size=1000&sort=nombreProducto&direction=ASC
2025-10-27 01:35:40 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos
2025-10-27 01:35:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/categorias
2025-10-27 01:35:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/categorias
2025-10-27 01:35:40 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/categorias
2025-10-27 01:35:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:35:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/categorias
2025-10-27 01:35:40 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/categorias
2025-10-27 01:35:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.activo 
    order by
        c1_0.nombre_categoria
2025-10-27 01:35:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.nombre_producto 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-27 01:35:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:35:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:35:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:35:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:35:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:35:41 [http-nio-8080-exec-10] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-10-27 01:35:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id_producto) 
    from
        productos p1_0 
    where
        p1_0.id_categoria=?
2025-10-27 01:35:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id_producto) 
    from
        productos p1_0 
    where
        p1_0.id_categoria=?
2025-10-27 01:35:53 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:35:53 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:35:53 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: 8wt28JyURmakufMgVHetif7bWaB2, Email: paulomoronpoma@gmail.com
2025-10-27 01:35:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:35:53 [http-nio-8080-exec-1] WARN  p.c.i.b.s.FirebaseAuthTokenFilter - ⚠️ Usuario no encontrado en BD - UID: 8wt28JyURmakufMgVHetif7bWaB2. Debe registrarse primero.
2025-10-27 01:35:53 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:35:53 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:35:53 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-10-27 01:35:53 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:35:53 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:35:53 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:35:53 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:35:53 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔐 No hay token Bearer - URI: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2. Spring Security manejará la auth.
2025-10-27 01:35:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:35:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:35:53 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-10-27 01:35:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:35:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:36:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/logout?firebaseUid=8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:01 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout?firebaseUid=8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:01 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/auth/logout
2025-10-27 01:36:01 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: 8wt28JyURmakufMgVHetif7bWaB2, Email: paulomoronpoma@gmail.com
2025-10-27 01:36:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:36:01 [http-nio-8080-exec-9] WARN  p.c.i.b.s.FirebaseAuthTokenFilter - ⚠️ Usuario no encontrado en BD - UID: 8wt28JyURmakufMgVHetif7bWaB2. Debe registrarse primero.
2025-10-27 01:36:01 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:01 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout?firebaseUid=8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:01 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/auth/logout
2025-10-27 01:36:01 [http-nio-8080-exec-9] INFO  p.c.i.b.controller.AuthController - 👋 Cerrando sesión para UID: 8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:36:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/productos/mas-vendido
2025-10-27 01:36:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/productos/por-agotarse?limite=12
2025-10-27 01:36:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/productos/mas-baratos?limite=12
2025-10-27 01:36:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/productos/mas-recientes?limite=12
2025-10-27 01:36:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-vendido
2025-10-27 01:36:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/por-agotarse?limite=12
2025-10-27 01:36:02 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 01:36:02 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:02 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 01:36:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-vendido
2025-10-27 01:36:02 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:02 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 01:36:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/por-agotarse?limite=12
2025-10-27 01:36:02 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 01:36:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-baratos?limite=12
2025-10-27 01:36:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-recientes?limite=12
2025-10-27 01:36:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.calificacion_promedio desc,
        p1_0.fecha_creacion desc 
    fetch
        first 1 rows only
2025-10-27 01:36:02 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 01:36:02 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-recientes?limite=12
2025-10-27 01:36:02 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 01:36:02 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 01:36:02 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-baratos?limite=12
2025-10-27 01:36:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock between 5 and 10 
    order by
        p1_0.stock 
    fetch
        first ? rows only
2025-10-27 01:36:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:36:02 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 01:36:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.fecha_creacion desc 
    fetch
        first ? rows only
2025-10-27 01:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.precio 
    fetch
        first ? rows only
2025-10-27 01:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:36:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/login-token
2025-10-27 01:36:22 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login-token
2025-10-27 01:36:22 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/auth/login-token
2025-10-27 01:36:22 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:22 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login-token
2025-10-27 01:36:22 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/auth/login-token
2025-10-27 01:36:23 [http-nio-8080-exec-8] INFO  p.c.i.b.controller.AuthController - 🔐 Intento de login con token (Social/Estandar)
2025-10-27 01:36:23 [http-nio-8080-exec-8] INFO  p.c.i.backend.service.AuthService - Verificando ID Token de Firebase para login/sincronización...
2025-10-27 01:36:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:36:23 [http-nio-8080-exec-8] WARN  p.c.i.backend.service.AuthService - Usuario UID 8wt28JyURmakufMgVHetif7bWaB2 no encontrado en BD. Intentando sincronización.
2025-10-27 01:36:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.nombre_rol=?
2025-10-27 01:36:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.firebase_uid is null
2025-10-27 01:36:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:24 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:24 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: 8wt28JyURmakufMgVHetif7bWaB2, Email: paulomoronpoma@gmail.com
2025-10-27 01:36:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:36:24 [http-nio-8080-exec-1] WARN  p.c.i.b.s.FirebaseAuthTokenFilter - ⚠️ Usuario no encontrado en BD - UID: 8wt28JyURmakufMgVHetif7bWaB2. Debe registrarse primero.
2025-10-27 01:36:24 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:24 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:36:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-10-27 01:36:24 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:24 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:36:24 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:24 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:24 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: 8wt28JyURmakufMgVHetif7bWaB2, Email: paulomoronpoma@gmail.com
2025-10-27 01:36:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:36:24 [http-nio-8080-exec-7] WARN  p.c.i.b.s.FirebaseAuthTokenFilter - ⚠️ Usuario no encontrado en BD - UID: 8wt28JyURmakufMgVHetif7bWaB2. Debe registrarse primero.
2025-10-27 01:36:24 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:24 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:36:24 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-10-27 01:36:24 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:24 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:36:24 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:24 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:24 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔐 No hay token Bearer - URI: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2. Spring Security manejará la auth.
2025-10-27 01:36:24 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:24 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:36:24 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-10-27 01:36:24 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:24 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:36:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        usuarios
        (activo, email, fecha_actualizacion, fecha_creacion, firebase_uid, password, id_rol, ultimo_acceso) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-10-27 01:36:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:24 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:24 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔐 No hay token Bearer - URI: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2. Spring Security manejará la auth.
2025-10-27 01:36:24 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:24 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:36:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-10-27 01:36:24 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:24 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:36:24 [http-nio-8080-exec-8] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23505
2025-10-27 01:36:24 [http-nio-8080-exec-8] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: llave duplicada viola restricción de unicidad «usuarios_email_key»
  Detail: Ya existe la llave (email)=(paulomoronpoma@gmail.com).
2025-10-27 01:36:24 [http-nio-8080-exec-8] ERROR p.c.i.b.controller.AuthController - ❌ Error inesperado en login con token: could not execute statement [ERROR: llave duplicada viola restricción de unicidad «usuarios_email_key»
  Detail: Ya existe la llave (email)=(paulomoronpoma@gmail.com).] [insert into usuarios (activo,email,fecha_actualizacion,fecha_creacion,firebase_uid,password,id_rol,ultimo_acceso) values (?,?,?,?,?,?,?,?)]; SQL [insert into usuarios (activo,email,fecha_actualizacion,fecha_creacion,firebase_uid,password,id_rol,ultimo_acceso) values (?,?,?,?,?,?,?,?)]; constraint [null]
org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: llave duplicada viola restricción de unicidad «usuarios_email_key»
  Detail: Ya existe la llave (email)=(paulomoronpoma@gmail.com).] [insert into usuarios (activo,email,fecha_actualizacion,fecha_creacion,firebase_uid,password,id_rol,ultimo_acceso) values (?,?,?,?,?,?,?,?)]; SQL [insert into usuarios (activo,email,fecha_actualizacion,fecha_creacion,firebase_uid,password,id_rol,ultimo_acceso) values (?,?,?,?,?,?,?,?)]; constraint [null]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:294)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:256)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy153.save(Unknown Source)
	at pe.com.ikaza.backend.service.AuthService.sincronizarUsuarioDesdeToken(AuthService.java:227)
	at pe.com.ikaza.backend.service.AuthService.iniciarSesionConToken(AuthService.java:158)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at pe.com.ikaza.backend.service.AuthService$$SpringCGLIB$$0.iniciarSesionConToken(<generated>)
	at pe.com.ikaza.backend.controller.AuthController.iniciarSesionConToken(AuthController.java:70)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1776)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: llave duplicada viola restricción de unicidad «usuarios_email_key»
  Detail: Ya existe la llave (email)=(paulomoronpoma@gmail.com).] [insert into usuarios (activo,email,fecha_actualizacion,fecha_creacion,firebase_uid,password,id_rol,ultimo_acceso) values (?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:97)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performMutation(GetGeneratedKeysDelegate.java:116)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:682)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:293)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:274)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:324)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:394)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:308)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:224)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:136)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:177)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:95)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy148.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)
	at jdk.proxy4/jdk.proxy4.$Proxy148.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:654)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:734)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	... 124 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: llave duplicada viola restricción de unicidad «usuarios_email_key»
  Detail: Ya existe la llave (email)=(paulomoronpoma@gmail.com).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:196)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:157)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 174 common frames omitted
2025-10-27 01:36:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:37 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:37 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: 8wt28JyURmakufMgVHetif7bWaB2, Email: paulomoronpoma@gmail.com
2025-10-27 01:36:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:36:37 [http-nio-8080-exec-6] WARN  p.c.i.b.s.FirebaseAuthTokenFilter - ⚠️ Usuario no encontrado en BD - UID: 8wt28JyURmakufMgVHetif7bWaB2. Debe registrarse primero.
2025-10-27 01:36:37 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:37 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:36:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-10-27 01:36:37 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:37 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:36:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:37 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:37 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔐 No hay token Bearer - URI: /api/clientes/perfil/8wt28JyURmakufMgVHetif7bWaB2. Spring Security manejará la auth.
2025-10-27 01:36:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:36:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-10-27 01:36:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-10-27 01:36:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout?firebaseUid=8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:42 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/auth/logout
2025-10-27 01:36:42 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: 8wt28JyURmakufMgVHetif7bWaB2, Email: paulomoronpoma@gmail.com
2025-10-27 01:36:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:36:42 [http-nio-8080-exec-1] WARN  p.c.i.b.s.FirebaseAuthTokenFilter - ⚠️ Usuario no encontrado en BD - UID: 8wt28JyURmakufMgVHetif7bWaB2. Debe registrarse primero.
2025-10-27 01:36:42 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout?firebaseUid=8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:42 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/auth/logout
2025-10-27 01:36:42 [http-nio-8080-exec-1] INFO  p.c.i.b.controller.AuthController - 👋 Cerrando sesión para UID: 8wt28JyURmakufMgVHetif7bWaB2
2025-10-27 01:36:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:36:43 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-vendido
2025-10-27 01:36:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/por-agotarse?limite=12
2025-10-27 01:36:43 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 01:36:43 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:43 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-vendido
2025-10-27 01:36:43 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 01:36:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-recientes?limite=12
2025-10-27 01:36:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.calificacion_promedio desc,
        p1_0.fecha_creacion desc 
    fetch
        first 1 rows only
2025-10-27 01:36:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-baratos?limite=12
2025-10-27 01:36:43 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 01:36:43 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/por-agotarse?limite=12
2025-10-27 01:36:43 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 01:36:43 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 01:36:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-recientes?limite=12
2025-10-27 01:36:43 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 01:36:43 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 01:36:43 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-baratos?limite=12
2025-10-27 01:36:43 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 01:36:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.fecha_creacion desc 
    fetch
        first ? rows only
2025-10-27 01:36:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:36:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:36:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:36:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock between 5 and 10 
    order by
        p1_0.stock 
    fetch
        first ? rows only
2025-10-27 01:36:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.precio 
    fetch
        first ? rows only
2025-10-27 01:36:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:36:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:36:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-vendido
2025-10-27 01:36:51 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 01:36:51 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-vendido
2025-10-27 01:36:51 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 01:36:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-recientes?limite=12
2025-10-27 01:36:51 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 01:36:51 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-recientes?limite=12
2025-10-27 01:36:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-baratos?limite=12
2025-10-27 01:36:51 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 01:36:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.calificacion_promedio desc,
        p1_0.fecha_creacion desc 
    fetch
        first 1 rows only
2025-10-27 01:36:51 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 01:36:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-baratos?limite=12
2025-10-27 01:36:51 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 01:36:51 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/por-agotarse?limite=12
2025-10-27 01:36:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:36:51 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 01:36:51 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:36:51 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/por-agotarse?limite=12
2025-10-27 01:36:51 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 01:36:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.fecha_creacion desc 
    fetch
        first ? rows only
2025-10-27 01:36:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.precio 
    fetch
        first ? rows only
2025-10-27 01:36:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:36:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock between 5 and 10 
    order by
        p1_0.stock 
    fetch
        first ? rows only
2025-10-27 01:36:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:36:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:36:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:36:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:36:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:37:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login-token
2025-10-27 01:37:00 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/auth/login-token
2025-10-27 01:37:00 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:37:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login-token
2025-10-27 01:37:00 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/auth/login-token
2025-10-27 01:37:00 [http-nio-8080-exec-10] INFO  p.c.i.b.controller.AuthController - 🔐 Intento de login con token (Social/Estandar)
2025-10-27 01:37:00 [http-nio-8080-exec-10] INFO  p.c.i.backend.service.AuthService - Verificando ID Token de Firebase para login/sincronización...
2025-10-27 01:37:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:00 [http-nio-8080-exec-10] INFO  p.c.i.backend.service.AuthService - Sincronización/Login exitoso para: cesar_2002_love@hotmail.com
2025-10-27 01:37:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        usuarios 
    set
        activo=?,
        email=?,
        fecha_actualizacion=?,
        firebase_uid=?,
        password=?,
        id_rol=?,
        ultimo_acceso=? 
    where
        id_usuario=?
2025-10-27 01:37:01 [http-nio-8080-exec-10] INFO  p.c.i.b.controller.AuthController - ✅ Login/Sincronización exitosa para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-vendido
2025-10-27 01:37:01 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 01:37:01 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:37:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-vendido
2025-10-27 01:37:01 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 01:37:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.calificacion_promedio desc,
        p1_0.fecha_creacion desc 
    fetch
        first 1 rows only
2025-10-27 01:37:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:37:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/por-agotarse?limite=12
2025-10-27 01:37:01 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 01:37:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:37:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:37:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/por-agotarse?limite=12
2025-10-27 01:37:01 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 01:37:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock between 5 and 10 
    order by
        p1_0.stock 
    fetch
        first ? rows only
2025-10-27 01:37:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-recientes?limite=12
2025-10-27 01:37:01 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 01:37:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:37:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-recientes?limite=12
2025-10-27 01:37:01 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 01:37:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.fecha_creacion desc 
    fetch
        first ? rows only
2025-10-27 01:37:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:37:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:37:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-baratos?limite=12
2025-10-27 01:37:01 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 01:37:01 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:37:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-baratos?limite=12
2025-10-27 01:37:01 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 01:37:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:37:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.precio 
    fetch
        first ? rows only
2025-10-27 01:37:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:37:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:37:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:37:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:37:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:37:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 01:37:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 01:37:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:01 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:01 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:01 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 01:37:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:01 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 01:37:01 [http-nio-8080-exec-5] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 01:37:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:01 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:01 [http-nio-8080-exec-5] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-5] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 01:37:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:02 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 01:37:02 [http-nio-8080-exec-9] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 01:37:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-9] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-9] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 01:37:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:02 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 01:37:02 [http-nio-8080-exec-3] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 01:37:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-3] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-3] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 01:37:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:02 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 01:37:02 [http-nio-8080-exec-10] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 01:37:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-10] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-10] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 01:37:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:02 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 01:37:02 [http-nio-8080-exec-1] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 01:37:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-1] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-1] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 01:37:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:02 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 01:37:02 [http-nio-8080-exec-2] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 01:37:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-2] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 01:37:02 [http-nio-8080-exec-2] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/usuarios/direcciones
2025-10-27 01:37:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/usuarios/direcciones
2025-10-27 01:37:26 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/usuarios/direcciones
2025-10-27 01:37:26 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 01:37:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:26 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 01:37:26 [http-nio-8080-exec-5] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 01:37:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/usuarios/direcciones
2025-10-27 01:37:26 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/usuarios/direcciones
2025-10-27 01:37:26 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity pe.com.ikaza.backend.controller.DireccionController.cargarDirecciones(); target is of class [pe.com.ikaza.backend.controller.DireccionController]
2025-10-27 01:37:27 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity pe.com.ikaza.backend.controller.DireccionController.cargarDirecciones(); target is of class [pe.com.ikaza.backend.controller.DireccionController]
2025-10-27 01:37:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-27 01:37:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_direccion,
        d1_0.alias,
        d1_0.codigo_postal,
        d1_0.direccion,
        d1_0.distrito,
        d1_0.es_principal,
        d1_0.fecha_creacion,
        d1_0.id_usuario,
        d1_0.latitud,
        d1_0.longitud,
        d1_0.pais,
        d1_0.provincia,
        d1_0.referencia,
        d1_0.region 
    from
        direcciones d1_0 
    where
        d1_0.id_usuario=?
2025-10-27 01:37:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:30 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:30 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 01:37:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:30 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 01:37:30 [http-nio-8080-exec-3] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 01:37:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:30 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:30 [http-nio-8080-exec-3] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 01:37:30 [http-nio-8080-exec-3] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:30 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:30 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:30 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 01:37:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:30 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 01:37:30 [http-nio-8080-exec-10] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 01:37:30 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:30 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:30 [http-nio-8080-exec-10] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 01:37:30 [http-nio-8080-exec-10] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 01:37:49 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/usuarios/pagos
2025-10-27 01:37:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/usuarios/pagos
2025-10-27 01:37:49 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/usuarios/pagos
2025-10-27 01:37:49 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 01:37:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:49 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 01:37:49 [http-nio-8080-exec-6] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 01:37:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/usuarios/pagos
2025-10-27 01:37:49 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/usuarios/pagos
2025-10-27 01:37:49 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity pe.com.ikaza.backend.controller.TarjetaController.cargarTarjetas(); target is of class [pe.com.ikaza.backend.controller.TarjetaController]
2025-10-27 01:37:49 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity pe.com.ikaza.backend.controller.TarjetaController.cargarTarjetas(); target is of class [pe.com.ikaza.backend.controller.TarjetaController]
2025-10-27 01:37:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-27 01:37:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        t1_0.id_metodo,
        t1_0.activo,
        t1_0.alias,
        t1_0.banco_emisor,
        t1_0.es_principal,
        t1_0.fecha_creacion,
        t1_0.fecha_expiracion,
        t1_0.id_usuario,
        t1_0.nombre_titular,
        t1_0.tipo,
        t1_0.tipo_tarjeta,
        t1_0.token_pago,
        t1_0.ultimos_4_digitos 
    from
        metodos_pago t1_0 
    where
        t1_0.id_usuario=? 
        and t1_0.activo
2025-10-27 01:37:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/usuarios/direcciones
2025-10-27 01:37:54 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/usuarios/direcciones
2025-10-27 01:37:54 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 01:37:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 01:37:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:54 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 01:37:54 [http-nio-8080-exec-7] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 01:37:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/usuarios/direcciones
2025-10-27 01:37:54 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/usuarios/direcciones
2025-10-27 01:37:54 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity pe.com.ikaza.backend.controller.DireccionController.cargarDirecciones(); target is of class [pe.com.ikaza.backend.controller.DireccionController]
2025-10-27 01:37:54 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity pe.com.ikaza.backend.controller.DireccionController.cargarDirecciones(); target is of class [pe.com.ikaza.backend.controller.DireccionController]
2025-10-27 01:37:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-27 01:37:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 01:37:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 01:37:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_direccion,
        d1_0.alias,
        d1_0.codigo_postal,
        d1_0.direccion,
        d1_0.distrito,
        d1_0.es_principal,
        d1_0.fecha_creacion,
        d1_0.id_usuario,
        d1_0.latitud,
        d1_0.longitud,
        d1_0.pais,
        d1_0.provincia,
        d1_0.referencia,
        d1_0.region 
    from
        direcciones d1_0 
    where
        d1_0.id_usuario=?
2025-10-27 01:38:30 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Par&country=pe
2025-10-27 01:38:30 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Par&country=pe
2025-10-27 01:38:30 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:38:30 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:38:30 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Par&country=pe
2025-10-27 01:38:30 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:38:30 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Parc&country=pe
2025-10-27 01:38:30 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Parc&country=pe
2025-10-27 01:38:30 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:38:30 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:38:30 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Parc&country=pe
2025-10-27 01:38:30 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:38:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Parco&country=pe
2025-10-27 01:38:30 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Parco&country=pe
2025-10-27 01:38:30 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:38:30 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:38:30 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Parco&country=pe
2025-10-27 01:38:30 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:38:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Parcon&country=pe
2025-10-27 01:38:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Parcon&country=pe
2025-10-27 01:38:31 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:38:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:38:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Parcon&country=pe
2025-10-27 01:38:31 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:38:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Parcona&country=pe
2025-10-27 01:38:31 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Parcona&country=pe
2025-10-27 01:38:31 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:38:31 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:38:31 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Parcona&country=pe
2025-10-27 01:38:31 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:38:35 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/place-details?placeId=ChIJAQdnTaTiEJERC-v54gXcOMc
2025-10-27 01:38:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/place-details?placeId=ChIJAQdnTaTiEJERC-v54gXcOMc
2025-10-27 01:38:35 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 01:38:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:38:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/place-details?placeId=ChIJAQdnTaTiEJERC-v54gXcOMc
2025-10-27 01:38:35 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 01:38:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=-13.9689984&lng=-75.7727232
2025-10-27 01:38:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=-13.9689984&lng=-75.7727232
2025-10-27 01:38:49 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 01:38:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:38:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=-13.9689984&lng=-75.7727232
2025-10-27 01:38:49 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 01:39:16 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=-13.969033105258791&lng=-75.7729556583329
2025-10-27 01:39:16 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=-13.969033105258791&lng=-75.7729556583329
2025-10-27 01:39:16 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 01:39:16 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:16 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=-13.969033105258791&lng=-75.7729556583329
2025-10-27 01:39:16 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 01:39:22 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=-13.9689984&lng=-75.7727232
2025-10-27 01:39:22 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 01:39:22 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:22 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=-13.9689984&lng=-75.7727232
2025-10-27 01:39:22 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 01:39:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20Sauces&country=pe
2025-10-27 01:39:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20Sauces&country=pe
2025-10-27 01:39:36 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20Sauces&country=pe
2025-10-27 01:39:36 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:49 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20Sauce&country=pe
2025-10-27 01:39:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20Sauce&country=pe
2025-10-27 01:39:49 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:49 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20Sauce&country=pe
2025-10-27 01:39:49 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20Sauc&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20Sau&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20Sauc&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20Sau&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20Sauc&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20Sau&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20Sa&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20Sa&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20Sa&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20S&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20S&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20S&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Los%20&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Lo&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Lo&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20Lo&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20L&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20L&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20L&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n%20&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3n&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizaci%C3%B3&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizaci&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci%C3%B3&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizac&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbaniza&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbaniz&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbani&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urban&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urba&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urb&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbaniz&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizac&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbaniz&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbaniza&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbani&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizac&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbani&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbaniza&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urban&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:50 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urban&country=pe
2025-10-27 01:39:50 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urba&country=pe
2025-10-27 01:39:51 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urba&country=pe
2025-10-27 01:39:51 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:51 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urb&country=pe
2025-10-27 01:39:51 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:51 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:51 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urb&country=pe
2025-10-27 01:39:51 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:53 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urb&country=pe
2025-10-27 01:39:53 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:53 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:53 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urb&country=pe
2025-10-27 01:39:53 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urba&country=pe
2025-10-27 01:39:54 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:54 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urba&country=pe
2025-10-27 01:39:54 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urban&country=pe
2025-10-27 01:39:54 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urban&country=pe
2025-10-27 01:39:54 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbani&country=pe
2025-10-27 01:39:55 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:55 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbani&country=pe
2025-10-27 01:39:55 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbaniz&country=pe
2025-10-27 01:39:55 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:55 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbaniz&country=pe
2025-10-27 01:39:55 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:55 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbaniza&country=pe
2025-10-27 01:39:55 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:55 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:55 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbaniza&country=pe
2025-10-27 01:39:55 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizac&country=pe
2025-10-27 01:39:55 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:55 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizac&country=pe
2025-10-27 01:39:55 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci&country=pe
2025-10-27 01:39:55 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:55 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci&country=pe
2025-10-27 01:39:55 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizacio&country=pe
2025-10-27 01:39:55 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizacio&country=pe
2025-10-27 01:39:55 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:55 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:55 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizacio&country=pe
2025-10-27 01:39:55 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizacion&country=pe
2025-10-27 01:39:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizacion&country=pe
2025-10-27 01:39:56 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizacion&country=pe
2025-10-27 01:39:56 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizacion%20&country=pe
2025-10-27 01:39:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizacion%20&country=pe
2025-10-27 01:39:56 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:56 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizacion%20&country=pe
2025-10-27 01:39:56 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizacion%20L&country=pe
2025-10-27 01:39:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizacion%20L&country=pe
2025-10-27 01:39:56 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizacion%20L&country=pe
2025-10-27 01:39:56 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizacion%20Lo&country=pe
2025-10-27 01:39:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizacion%20Lo&country=pe
2025-10-27 01:39:56 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:56 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizacion%20Lo&country=pe
2025-10-27 01:39:56 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizacion%20Los&country=pe
2025-10-27 01:39:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizacion%20Los&country=pe
2025-10-27 01:39:57 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:57 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizacion%20Los&country=pe
2025-10-27 01:39:57 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:57 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Urbanizacion%20Los%20&country=pe
2025-10-27 01:39:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizacion%20Los%20&country=pe
2025-10-27 01:39:57 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:57 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizacion%20Los%20&country=pe
2025-10-27 01:39:57 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizacion%20Los&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizacion%20Los&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizacion%20Lo&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizacion%20Lo&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizacion%20L&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizacion%20L&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizacion%20&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizacion%20&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizacion&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizacion&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizacio&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizacio&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizaci&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizaci&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbanizac&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbaniza&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:58 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbanizac&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbaniz&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:58 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbaniz&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbaniza&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urbani&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urban&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:58 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urban&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urbani&country=pe
2025-10-27 01:39:58 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:58 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urb&country=pe
2025-10-27 01:39:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Urba&country=pe
2025-10-27 01:39:59 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:59 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:59 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urb&country=pe
2025-10-27 01:39:59 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:59 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Urba&country=pe
2025-10-27 01:39:59 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Aco&country=pe
2025-10-27 01:39:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Aco&country=pe
2025-10-27 01:39:59 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:39:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:39:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Aco&country=pe
2025-10-27 01:39:59 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:40:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acom&country=pe
2025-10-27 01:40:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acom&country=pe
2025-10-27 01:40:00 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:40:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:40:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acom&country=pe
2025-10-27 01:40:00 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:40:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acoma&country=pe
2025-10-27 01:40:00 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acoma&country=pe
2025-10-27 01:40:00 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:40:00 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:40:00 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acoma&country=pe
2025-10-27 01:40:00 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:40:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomao&country=pe
2025-10-27 01:40:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomao&country=pe
2025-10-27 01:40:01 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:40:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:40:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomao&country=pe
2025-10-27 01:40:01 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:40:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acoma&country=pe
2025-10-27 01:40:01 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:40:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:40:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acoma&country=pe
2025-10-27 01:40:01 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 01:40:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/place-details?placeId=EhJBY29tYXlvLCBJY2EsIFBlcnUiLiosChQKEgnv_bHNm-IQkREmP2V-0xkBIhIUChIJPU_HzsPiEJERzX7mkLWi4Vw
2025-10-27 01:40:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/place-details?placeId=EhJBY29tYXlvLCBJY2EsIFBlcnUiLiosChQKEgnv_bHNm-IQkREmP2V-0xkBIhIUChIJPU_HzsPiEJERzX7mkLWi4Vw
2025-10-27 01:40:02 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 01:40:02 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:40:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/place-details?placeId=EhJBY29tYXlvLCBJY2EsIFBlcnUiLiosChQKEgnv_bHNm-IQkREmP2V-0xkBIhIUChIJPU_HzsPiEJERzX7mkLWi4Vw
2025-10-27 01:40:02 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 01:40:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=0&lng=-75.7231375
2025-10-27 01:40:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=0&lng=-75.7231375
2025-10-27 01:40:03 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 01:40:03 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 01:40:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=0&lng=-75.7231375
2025-10-27 01:40:03 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 01:59:51 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Starting BackendApplication using Java 21.0.2 with PID 20040 (D:\proyecto-ikaza-web\ikaza-backend\target\classes started by user in D:\proyecto-ikaza-web\ikaza-backend)
2025-10-27 01:59:51 [restartedMain] DEBUG p.c.ikaza.backend.BackendApplication - Running with Spring Boot v3.5.6, Spring v6.2.11
2025-10-27 01:59:51 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - The following 1 profile is active: "dev"
2025-10-27 01:59:51 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-27 01:59:51 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-27 01:59:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-27 01:59:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-27 01:59:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 142 ms. Found 13 JPA repository interfaces.
2025-10-27 01:59:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-27 01:59:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-10-27 01:59:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 1 MongoDB repository interface.
2025-10-27 01:59:55 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-27 01:59:55 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-27 01:59:55 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.46]
2025-10-27 01:59:55 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-27 01:59:55 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3387 ms
2025-10-27 01:59:55 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-27 01:59:55 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.29.Final
2025-10-27 01:59:55 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-27 01:59:56 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-27 01:59:56 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-27 01:59:57 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@28a23d71
2025-10-27 01:59:57 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-27 01:59:57 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-27 01:59:57 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-27 02:00:00 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-27 02:00:02 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-27 02:00:03 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-27 02:00:04 [restartedMain] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - Filter 'firebaseAuthTokenFilter' configured for use
2025-10-27 02:00:07 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.5.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.2+13-LTS-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2b2f7100, com.mongodb.Jep395RecordCodecProvider@3314ff7f, com.mongodb.KotlinCodecProvider@2fd28c4b]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-10-27 02:00:07 [cluster-ClusterId{value='68ff18773b774acb91837782', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=210796600, minRoundTripTimeNanos=0}
2025-10-27 02:00:07 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-27 02:00:08 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-27 02:00:08 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-10-27 02:00:09 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/inventario/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-10-27 02:00:09 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, FirebaseAuthTokenFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-27 02:00:10 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-27 02:00:10 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Started BackendApplication in 19.445 seconds (process running for 21.023)
2025-10-27 02:00:43 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-27 02:00:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-27 02:00:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-10-27 02:00:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-vendido
2025-10-27 02:00:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-recientes?limite=12
2025-10-27 02:00:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/por-agotarse?limite=12
2025-10-27 02:00:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-baratos?limite=12
2025-10-27 02:00:43 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 02:00:43 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 02:00:43 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 02:00:43 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 02:00:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:00:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:00:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:00:43 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:00:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-vendido
2025-10-27 02:00:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/por-agotarse?limite=12
2025-10-27 02:00:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-baratos?limite=12
2025-10-27 02:00:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-recientes?limite=12
2025-10-27 02:00:43 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 02:00:43 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 02:00:43 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 02:00:43 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 02:00:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.fecha_creacion desc 
    fetch
        first ? rows only
2025-10-27 02:00:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.precio 
    fetch
        first ? rows only
2025-10-27 02:00:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.calificacion_promedio desc,
        p1_0.fecha_creacion desc 
    fetch
        first 1 rows only
2025-10-27 02:00:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock between 5 and 10 
    order by
        p1_0.stock 
    fetch
        first ? rows only
2025-10-27 02:00:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:00:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:00:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:00:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:00:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:00:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:00:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:00:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:00:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:00:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:00:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:00:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:00:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:46 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 02:00:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:00:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:00:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:00:47 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 02:00:47 [http-nio-8080-exec-5] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 02:00:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-5] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:00:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:00:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:00:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 02:00:47 [http-nio-8080-exec-5] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 02:00:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:00:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:00:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:00:47 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 02:00:47 [http-nio-8080-exec-6] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 02:00:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-6] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:00:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:00:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:00:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 02:00:47 [http-nio-8080-exec-6] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 02:00:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:00:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:00:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:00:47 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 02:00:47 [http-nio-8080-exec-7] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 02:00:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-7] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:00:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:00:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:00:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 02:00:47 [http-nio-8080-exec-7] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 02:00:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:00:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:00:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:00:47 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 02:00:47 [http-nio-8080-exec-8] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 02:00:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-8] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:00:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:00:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:00:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 02:00:47 [http-nio-8080-exec-8] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:52 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:52 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 02:00:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:00:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:00:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:00:52 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 02:00:52 [http-nio-8080-exec-4] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 02:00:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:52 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:52 [http-nio-8080-exec-4] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:00:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:00:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:00:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 02:00:52 [http-nio-8080-exec-4] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:52 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:52 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 02:00:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:00:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:00:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:00:52 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 02:00:52 [http-nio-8080-exec-1] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 02:00:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:52 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:52 [http-nio-8080-exec-1] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:00:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:00:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:00:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:00:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 02:00:52 [http-nio-8080-exec-1] WARN  p.c.i.b.controller.ClienteController - ⚠️ Cliente no encontrado: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:27:28 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Starting BackendApplication using Java 21.0.2 with PID 12824 (D:\proyecto-ikaza-web\ikaza-backend\target\classes started by user in D:\proyecto-ikaza-web\ikaza-backend)
2025-10-27 02:27:28 [restartedMain] DEBUG p.c.ikaza.backend.BackendApplication - Running with Spring Boot v3.5.6, Spring v6.2.11
2025-10-27 02:27:28 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - The following 1 profile is active: "dev"
2025-10-27 02:27:28 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-27 02:27:28 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-27 02:27:29 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-27 02:27:29 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-27 02:27:30 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 141 ms. Found 13 JPA repository interfaces.
2025-10-27 02:27:30 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-27 02:27:30 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-10-27 02:27:30 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 1 MongoDB repository interface.
2025-10-27 02:27:32 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-27 02:27:32 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-27 02:27:32 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.46]
2025-10-27 02:27:32 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-27 02:27:32 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3862 ms
2025-10-27 02:27:33 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-27 02:27:33 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.29.Final
2025-10-27 02:27:33 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-27 02:27:33 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-27 02:27:33 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-27 02:27:34 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3d65f392
2025-10-27 02:27:34 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-27 02:27:34 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-27 02:27:34 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-27 02:27:37 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-27 02:27:40 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-27 02:27:41 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-27 02:27:42 [restartedMain] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - Filter 'firebaseAuthTokenFilter' configured for use
2025-10-27 02:27:45 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.5.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.2+13-LTS-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@741396d4, com.mongodb.Jep395RecordCodecProvider@7df7871, com.mongodb.KotlinCodecProvider@152113b]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-10-27 02:27:45 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-27 02:27:45 [cluster-ClusterId{value='68ff1ef0ea52d9aab0a65a20', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=824184300, minRoundTripTimeNanos=0}
2025-10-27 02:27:46 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-27 02:27:46 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-10-27 02:27:46 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/inventario/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-10-27 02:27:46 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, FirebaseAuthTokenFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-27 02:27:47 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-27 02:27:47 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Started BackendApplication in 20.352 seconds (process running for 21.805)
2025-10-27 02:29:04 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-27 02:29:04 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-27 02:29:04 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-10-27 02:29:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-recientes?limite=12
2025-10-27 02:29:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-baratos?limite=12
2025-10-27 02:29:04 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-vendido
2025-10-27 02:29:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/por-agotarse?limite=12
2025-10-27 02:29:04 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 02:29:04 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 02:29:04 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 02:29:04 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 02:29:04 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:29:04 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:29:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:29:04 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:29:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/por-agotarse?limite=12
2025-10-27 02:29:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-baratos?limite=12
2025-10-27 02:29:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-recientes?limite=12
2025-10-27 02:29:04 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-vendido
2025-10-27 02:29:04 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 02:29:04 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 02:29:04 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 02:29:04 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 02:29:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.fecha_creacion desc 
    fetch
        first ? rows only
2025-10-27 02:29:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.calificacion_promedio desc,
        p1_0.fecha_creacion desc 
    fetch
        first 1 rows only
2025-10-27 02:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock between 5 and 10 
    order by
        p1_0.stock 
    fetch
        first ? rows only
2025-10-27 02:29:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.precio 
    fetch
        first ? rows only
2025-10-27 02:29:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:29:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:29:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:29:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:29:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:29:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:29:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:29:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:29:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:29:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:29:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:29:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:29:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:08 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:09 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 02:29:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:29:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:29:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:29:09 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 02:29:09 [http-nio-8080-exec-9] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 02:29:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:09 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:09 [http-nio-8080-exec-9] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:29:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:29:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:29:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 02:29:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:09 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:09 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 02:29:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:29:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:29:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:29:09 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 02:29:09 [http-nio-8080-exec-10] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 02:29:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:09 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:09 [http-nio-8080-exec-10] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:29:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:29:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:29:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 02:29:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:13 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:13 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 02:29:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:29:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:29:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:29:13 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 02:29:13 [http-nio-8080-exec-1] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 02:29:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:13 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:13 [http-nio-8080-exec-1] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:29:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:29:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:29:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 02:29:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:27 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:27 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 02:29:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:29:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:29:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:29:27 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 02:29:27 [http-nio-8080-exec-6] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 02:29:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:27 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:27 [http-nio-8080-exec-6] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:29:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:29:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:29:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:29:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 02:31:49 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/productos?page=0&size=20&sort=nombreProducto&direction=ASC
2025-10-27 02:31:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/productos/NaN/detalle
2025-10-27 02:31:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos?page=0&size=20&sort=nombreProducto&direction=ASC
2025-10-27 02:31:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/NaN/detalle
2025-10-27 02:31:49 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos
2025-10-27 02:31:49 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:31:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos?page=0&size=20&sort=nombreProducto&direction=ASC
2025-10-27 02:31:49 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos
2025-10-27 02:31:49 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/NaN/detalle
2025-10-27 02:31:49 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:31:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/NaN/detalle
2025-10-27 02:31:49 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/NaN/detalle
2025-10-27 02:31:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.nombre_producto 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-27 02:31:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:31:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:31:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:31:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:31:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:31:49 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-10-27 02:31:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/NaN/detalle
2025-10-27 02:31:49 [http-nio-8080-exec-9] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-10-27 02:31:49 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/NaN/detalle
2025-10-27 02:31:49 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:31:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/NaN/detalle
2025-10-27 02:31:49 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/NaN/detalle
2025-10-27 02:31:49 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-10-27 02:32:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/productos/1
2025-10-27 02:32:19 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/1
2025-10-27 02:32:19 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/1
2025-10-27 02:32:19 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:32:19 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/1
2025-10-27 02:32:19 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/1
2025-10-27 02:32:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id_categoria=p1_0.id_categoria 
    left join
        inventario i1_0 
            on p1_0.id_producto=i1_0.id_producto 
    where
        p1_0.id_producto=?
2025-10-27 02:32:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/categorias
2025-10-27 02:32:37 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/categorias
2025-10-27 02:32:37 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:32:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/categorias
2025-10-27 02:32:37 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/categorias
2025-10-27 02:32:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos?page=0&size=1000&sort=nombreProducto&direction=ASC
2025-10-27 02:32:37 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos
2025-10-27 02:32:37 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:32:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos?page=0&size=1000&sort=nombreProducto&direction=ASC
2025-10-27 02:32:37 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos
2025-10-27 02:32:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.activo 
    order by
        c1_0.nombre_categoria
2025-10-27 02:32:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.nombre_producto 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-27 02:32:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:32:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:32:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:32:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:32:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:32:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id_producto) 
    from
        productos p1_0 
    where
        p1_0.id_categoria=?
2025-10-27 02:32:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id_producto) 
    from
        productos p1_0 
    where
        p1_0.id_categoria=?
2025-10-27 02:32:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/categorias
2025-10-27 02:32:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/productos?page=0&size=12&sort=nombreProducto&direction=ASC
2025-10-27 02:32:40 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/categorias
2025-10-27 02:32:40 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:32:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/categorias
2025-10-27 02:32:40 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/categorias
2025-10-27 02:32:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos?page=0&size=12&sort=nombreProducto&direction=ASC
2025-10-27 02:32:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.activo 
    order by
        c1_0.nombre_categoria
2025-10-27 02:32:40 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos
2025-10-27 02:32:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:32:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos?page=0&size=12&sort=nombreProducto&direction=ASC
2025-10-27 02:32:40 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos
2025-10-27 02:32:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.nombre_producto 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-27 02:32:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:32:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:32:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:32:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id_producto) 
    from
        productos p1_0 
    where
        p1_0.id_categoria=?
2025-10-27 02:32:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:32:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:32:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id_producto) 
    from
        productos p1_0 
    where
        p1_0.id_categoria=?
2025-10-27 02:32:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos?page=0&size=20&sort=nombreProducto&direction=ASC
2025-10-27 02:32:44 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos
2025-10-27 02:32:44 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:32:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos?page=0&size=20&sort=nombreProducto&direction=ASC
2025-10-27 02:32:44 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos
2025-10-27 02:32:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/NaN/detalle
2025-10-27 02:32:44 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/NaN/detalle
2025-10-27 02:32:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:32:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/NaN/detalle
2025-10-27 02:32:44 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/NaN/detalle
2025-10-27 02:32:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.nombre_producto 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-27 02:32:44 [http-nio-8080-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-10-27 02:32:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:32:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:32:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 02:32:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:32:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 02:32:44 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/NaN/detalle
2025-10-27 02:32:44 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/NaN/detalle
2025-10-27 02:32:44 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:32:44 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/NaN/detalle
2025-10-27 02:32:44 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/NaN/detalle
2025-10-27 02:32:44 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-10-27 02:33:16 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:33:16 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:33:16 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 02:33:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:33:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:33:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:33:16 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 02:33:16 [http-nio-8080-exec-7] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 02:33:16 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:33:16 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:33:16 [http-nio-8080-exec-7] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:33:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:33:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:33:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:33:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 02:33:19 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/usuarios/direcciones
2025-10-27 02:33:19 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/usuarios/direcciones
2025-10-27 02:33:19 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 02:33:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:33:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:33:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:33:19 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 02:33:19 [http-nio-8080-exec-3] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 02:33:19 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/usuarios/direcciones
2025-10-27 02:33:19 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/usuarios/direcciones
2025-10-27 02:33:19 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity pe.com.ikaza.backend.controller.DireccionController.cargarDirecciones(); target is of class [pe.com.ikaza.backend.controller.DireccionController]
2025-10-27 02:33:19 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity pe.com.ikaza.backend.controller.DireccionController.cargarDirecciones(); target is of class [pe.com.ikaza.backend.controller.DireccionController]
2025-10-27 02:33:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-27 02:33:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:33:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:33:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_direccion,
        d1_0.alias,
        d1_0.codigo_postal,
        d1_0.direccion,
        d1_0.distrito,
        d1_0.es_principal,
        d1_0.fecha_creacion,
        d1_0.id_usuario,
        d1_0.latitud,
        d1_0.longitud,
        d1_0.pais,
        d1_0.provincia,
        d1_0.referencia,
        d1_0.region 
    from
        direcciones d1_0 
    where
        d1_0.id_usuario=?
2025-10-27 02:33:28 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=urb&country=pe
2025-10-27 02:33:28 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=urb&country=pe
2025-10-27 02:33:28 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:33:28 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:33:28 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=urb&country=pe
2025-10-27 02:33:28 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:33:28 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=urba&country=pe
2025-10-27 02:33:28 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=urba&country=pe
2025-10-27 02:33:28 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:33:28 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:33:28 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=urba&country=pe
2025-10-27 02:33:28 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:33:28 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=urb&country=pe
2025-10-27 02:33:28 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:33:28 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:33:28 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=urb&country=pe
2025-10-27 02:33:28 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:33:29 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=aco&country=pe
2025-10-27 02:33:29 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=aco&country=pe
2025-10-27 02:33:29 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:33:29 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:33:29 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=aco&country=pe
2025-10-27 02:33:29 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:33:29 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=acom&country=pe
2025-10-27 02:33:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=acom&country=pe
2025-10-27 02:33:29 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:33:29 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:33:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=acom&country=pe
2025-10-27 02:33:29 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:33:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/place-details?placeId=EhJBY29tYXlvLCBJY2EsIFBlcnUiLiosChQKEgnv_bHNm-IQkREmP2V-0xkBIhIUChIJPU_HzsPiEJERzX7mkLWi4Vw
2025-10-27 02:33:32 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 02:33:32 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:33:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/place-details?placeId=EhJBY29tYXlvLCBJY2EsIFBlcnUiLiosChQKEgnv_bHNm-IQkREmP2V-0xkBIhIUChIJPU_HzsPiEJERzX7mkLWi4Vw
2025-10-27 02:33:32 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 02:33:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=0&lng=-75.7231375
2025-10-27 02:33:33 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 02:33:33 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:33:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=0&lng=-75.7231375
2025-10-27 02:33:33 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 02:33:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/place-details?placeId=ChIJP7Fbd0CWbpERaqRTj0u3Lic
2025-10-27 02:33:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/place-details?placeId=ChIJP7Fbd0CWbpERaqRTj0u3Lic
2025-10-27 02:33:46 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 02:33:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:33:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/place-details?placeId=ChIJP7Fbd0CWbpERaqRTj0u3Lic
2025-10-27 02:33:46 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 02:33:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=0&lng=-71.6833925
2025-10-27 02:33:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=0&lng=-71.6833925
2025-10-27 02:33:47 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 02:33:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:33:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=0&lng=-71.6833925
2025-10-27 02:33:47 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 02:34:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/place-details?placeId=EhJBY29tYXlvLCBJY2EsIFBlcnUiLiosChQKEgnv_bHNm-IQkREmP2V-0xkBIhIUChIJPU_HzsPiEJERzX7mkLWi4Vw
2025-10-27 02:34:03 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 02:34:03 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/place-details?placeId=EhJBY29tYXlvLCBJY2EsIFBlcnUiLiosChQKEgnv_bHNm-IQkREmP2V-0xkBIhIUChIJPU_HzsPiEJERzX7mkLWi4Vw
2025-10-27 02:34:03 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 02:34:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=0&lng=-75.7231375
2025-10-27 02:34:03 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 02:34:03 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=0&lng=-75.7231375
2025-10-27 02:34:03 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 02:34:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=0&lng=-75.7231375
2025-10-27 02:34:28 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 02:34:28 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=0&lng=-75.7231375
2025-10-27 02:34:28 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 02:34:31 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G6272G%2B2&country=pe
2025-10-27 02:34:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G6272G%2B2&country=pe
2025-10-27 02:34:31 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:31 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G6272G%2B2&country=pe
2025-10-27 02:34:31 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G6272G%2B&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G6272G%2B&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:32 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G6272G%2B&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G6272G&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G6272G&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:32 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G6272G&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G6272&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G6272&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:32 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G6272&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G627&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G627&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:32 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G627&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G62&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G62&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:32 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G62&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G6&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G6&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:32 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G6&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:32 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G&country=pe
2025-10-27 02:34:32 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=aco&country=pe
2025-10-27 02:34:33 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:33 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=aco&country=pe
2025-10-27 02:34:33 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=acom&country=pe
2025-10-27 02:34:34 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:34 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=acom&country=pe
2025-10-27 02:34:34 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:34 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=acoma&country=pe
2025-10-27 02:34:34 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=acoma&country=pe
2025-10-27 02:34:34 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:34 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:34 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=acoma&country=pe
2025-10-27 02:34:34 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:34:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/place-details?placeId=EhJBY29tYXlvLCBJY2EsIFBlcnUiLiosChQKEgnv_bHNm-IQkREmP2V-0xkBIhIUChIJPU_HzsPiEJERzX7mkLWi4Vw
2025-10-27 02:34:36 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 02:34:36 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/place-details?placeId=EhJBY29tYXlvLCBJY2EsIFBlcnUiLiosChQKEgnv_bHNm-IQkREmP2V-0xkBIhIUChIJPU_HzsPiEJERzX7mkLWi4Vw
2025-10-27 02:34:36 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 02:34:45 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=-13.9689984&lng=-75.7727232
2025-10-27 02:34:45 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 02:34:45 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:45 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=-13.9689984&lng=-75.7727232
2025-10-27 02:34:45 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 02:34:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/place-details?placeId=EhNBY29tYXlvLCBMaW1hLCBQZXJ1Ii4qLAoUChIJWewchSK5BZERBLIRBc5SXbASFAoSCWeWUx7byAWRESnae6CKU0VP
2025-10-27 02:34:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/place-details?placeId=EhNBY29tYXlvLCBMaW1hLCBQZXJ1Ii4qLAoUChIJWewchSK5BZERBLIRBc5SXbASFAoSCWeWUx7byAWRESnae6CKU0VP
2025-10-27 02:34:56 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 02:34:56 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/place-details?placeId=EhNBY29tYXlvLCBMaW1hLCBQZXJ1Ii4qLAoUChIJWewchSK5BZERBLIRBc5SXbASFAoSCWeWUx7byAWRESnae6CKU0VP
2025-10-27 02:34:56 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 02:34:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=0&lng=-76.9407437
2025-10-27 02:34:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=0&lng=-76.9407437
2025-10-27 02:34:57 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 02:34:57 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:34:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=0&lng=-76.9407437
2025-10-27 02:34:57 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 02:35:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20Lima%2C%20Per&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20Lima%2C%20Per&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20Lima%2C%20Per&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20Lima%2C%20Pe&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20Lima%2C%20Pe&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20Lima%2C%20Pe&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20Lima%2C%20P&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20Lima%2C%20P&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20Lima%2C%20P&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20Lima%2C%20&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20Lima%2C%20&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20Lima%2C%20&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20Lima%2C&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20Lima%2C&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20Lima%2C&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20Lima&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20Lima&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20Lima&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20Lim&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20Lim&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20Lim&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20Li&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20Li&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20Li&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20L&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20L&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20L&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomay&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acom&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acoma&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acom&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acoma&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomay&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomay&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Aco&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:02 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Aco&country=pe
2025-10-27 02:35:02 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=ica&country=pe
2025-10-27 02:35:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica&country=pe
2025-10-27 02:35:03 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:03 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica&country=pe
2025-10-27 02:35:03 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=ica%2C&country=pe
2025-10-27 02:35:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica%2C&country=pe
2025-10-27 02:35:03 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:03 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica%2C&country=pe
2025-10-27 02:35:03 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=ica%2C%20&country=pe
2025-10-27 02:35:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica%2C%20&country=pe
2025-10-27 02:35:04 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:04 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica%2C%20&country=pe
2025-10-27 02:35:04 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=ica%2C%20i&country=pe
2025-10-27 02:35:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica%2C%20i&country=pe
2025-10-27 02:35:04 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:04 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica%2C%20i&country=pe
2025-10-27 02:35:04 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=ica%2C%20ic&country=pe
2025-10-27 02:35:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica%2C%20ic&country=pe
2025-10-27 02:35:04 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:04 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica%2C%20ic&country=pe
2025-10-27 02:35:04 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=ica%2C%20ica&country=pe
2025-10-27 02:35:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica%2C%20ica&country=pe
2025-10-27 02:35:04 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica%2C%20ica&country=pe
2025-10-27 02:35:04 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 02:35:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/place-details?placeId=ChIJ55lnqbICEZERPSt5ZMNUB90
2025-10-27 02:35:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/place-details?placeId=ChIJ55lnqbICEZERPSt5ZMNUB90
2025-10-27 02:35:06 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 02:35:06 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/place-details?placeId=ChIJ55lnqbICEZERPSt5ZMNUB90
2025-10-27 02:35:06 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 02:35:07 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=0&lng=-75.70198409999999
2025-10-27 02:35:07 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=0&lng=-75.70198409999999
2025-10-27 02:35:07 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 02:35:07 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 02:35:07 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=0&lng=-75.70198409999999
2025-10-27 02:35:07 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 02:36:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:36:15 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:36:15 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 02:36:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:36:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:36:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:36:15 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 02:36:15 [http-nio-8080-exec-2] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 02:36:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:36:15 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:36:15 [http-nio-8080-exec-2] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 02:36:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 02:36:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 02:36:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 02:36:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 11:00:57 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Starting BackendApplication using Java 21.0.2 with PID 16624 (D:\proyecto-ikaza-web\ikaza-backend\target\classes started by user in D:\proyecto-ikaza-web\ikaza-backend)
2025-10-27 11:00:57 [restartedMain] DEBUG p.c.ikaza.backend.BackendApplication - Running with Spring Boot v3.5.6, Spring v6.2.11
2025-10-27 11:00:57 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - The following 1 profile is active: "dev"
2025-10-27 11:00:57 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-27 11:00:57 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-27 11:00:58 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-27 11:00:58 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-27 11:00:58 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 135 ms. Found 13 JPA repository interfaces.
2025-10-27 11:00:58 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-27 11:00:58 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-10-27 11:00:58 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 1 MongoDB repository interface.
2025-10-27 11:01:01 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-27 11:01:01 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-27 11:01:01 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.46]
2025-10-27 11:01:01 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-27 11:01:01 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3901 ms
2025-10-27 11:01:01 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-27 11:01:01 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.29.Final
2025-10-27 11:01:02 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-27 11:01:02 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-27 11:01:02 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-27 11:01:04 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@28a23d71
2025-10-27 11:01:04 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-27 11:01:04 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-27 11:01:05 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-27 11:01:07 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-27 11:01:10 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-27 11:01:11 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-27 11:01:12 [restartedMain] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - Filter 'firebaseAuthTokenFilter' configured for use
2025-10-27 11:01:15 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.5.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.2+13-LTS-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3314ff7f, com.mongodb.Jep395RecordCodecProvider@2fd28c4b, com.mongodb.KotlinCodecProvider@422b240c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-10-27 11:01:15 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-27 11:01:16 [cluster-ClusterId{value='68ff974b57f60c9f0092fb14', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1093633600, minRoundTripTimeNanos=0}
2025-10-27 11:01:16 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-27 11:01:17 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-10-27 11:01:17 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/inventario/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-10-27 11:01:17 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, FirebaseAuthTokenFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-27 11:01:18 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-27 11:01:18 [restartedMain] INFO  p.c.ikaza.backend.BackendApplication - Started BackendApplication in 22.433 seconds (process running for 23.667)
2025-10-27 11:01:52 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-27 11:01:52 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-27 11:01:52 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-10-27 11:01:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/productos/mas-baratos?limite=12
2025-10-27 11:01:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/productos/por-agotarse?limite=12
2025-10-27 11:01:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/productos/mas-recientes?limite=12
2025-10-27 11:01:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/productos/mas-vendido
2025-10-27 11:01:52 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-vendido
2025-10-27 11:01:52 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/por-agotarse?limite=12
2025-10-27 11:01:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-recientes?limite=12
2025-10-27 11:01:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos/mas-baratos?limite=12
2025-10-27 11:01:52 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 11:01:52 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 11:01:52 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 11:01:52 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 11:01:52 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:01:52 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:01:52 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:01:52 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:01:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-baratos?limite=12
2025-10-27 11:01:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-recientes?limite=12
2025-10-27 11:01:52 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/mas-vendido
2025-10-27 11:01:52 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos/por-agotarse?limite=12
2025-10-27 11:01:52 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-vendido
2025-10-27 11:01:52 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-baratos
2025-10-27 11:01:52 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/por-agotarse
2025-10-27 11:01:52 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/productos/mas-recientes
2025-10-27 11:01:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.precio 
    fetch
        first ? rows only
2025-10-27 11:01:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock>0 
    order by
        p1_0.calificacion_promedio desc,
        p1_0.fecha_creacion desc 
    fetch
        first 1 rows only
2025-10-27 11:01:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    order by
        p1_0.fecha_creacion desc 
    fetch
        first ? rows only
2025-10-27 11:01:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_producto,
        p1_0.calificacion_promedio,
        p1_0.id_categoria,
        p1_0.descripcion_producto,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.mongo_product_id,
        p1_0.nombre_producto,
        p1_0.precio,
        p1_0.stock,
        p1_0.stock_minimo 
    from
        productos p1_0 
    where
        p1_0.stock between 5 and 10 
    order by
        p1_0.stock 
    fetch
        first ? rows only
2025-10-27 11:01:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 11:01:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 11:01:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 11:01:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 11:01:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 11:01:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 11:01:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 11:01:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 11:01:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_categoria,
        c1_0.activo,
        c1_0.descripcion_categoria,
        c1_0.fecha_creacion,
        c1_0.nombre_categoria 
    from
        categorias c1_0 
    where
        c1_0.id_categoria=?
2025-10-27 11:01:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 11:01:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 11:01:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id_inventario,
        i1_0.fecha_actualizacion,
        i1_0.id_producto,
        i1_0.stock_actual,
        i1_0.stock_disponible,
        i1_0.stock_reservado 
    from
        inventario i1_0 
    where
        i1_0.id_producto=?
2025-10-27 11:01:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:01:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:01:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:01:56 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:01:57 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 11:01:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 11:01:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 11:01:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 11:01:57 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 11:01:57 [http-nio-8080-exec-2] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 11:01:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:01:57 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:01:57 [http-nio-8080-exec-2] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:01:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 11:01:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 11:01:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 11:01:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 11:01:57 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:01:57 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:01:58 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 11:01:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 11:01:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 11:01:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 11:01:58 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 11:01:58 [http-nio-8080-exec-8] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 11:01:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:01:58 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:01:58 [http-nio-8080-exec-8] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:01:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 11:01:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 11:01:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 11:01:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 11:02:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:02:01 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:02:01 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 11:02:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 11:02:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 11:02:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 11:02:01 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 11:02:01 [http-nio-8080-exec-5] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 11:02:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:02:01 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/clientes/perfil/mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:02:01 [http-nio-8080-exec-5] INFO  p.c.i.b.controller.ClienteController - 👤 Obteniendo perfil para UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1
2025-10-27 11:02:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 11:02:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 11:02:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 11:02:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    left join
        usuarios u1_0 
            on u1_0.id_usuario=c1_0.id_usuario 
    where
        u1_0.id_usuario=?
2025-10-27 11:02:07 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/usuarios/direcciones
2025-10-27 11:02:07 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/usuarios/direcciones
2025-10-27 11:02:07 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/usuarios/direcciones
2025-10-27 11:02:07 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Token válido - UID: mVYvPiBUCDN6d7JiSeEGoZx3Wqs1, Email: cesar_2002_love@hotmail.com
2025-10-27 11:02:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.firebase_uid=?
2025-10-27 11:02:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 11:02:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 11:02:07 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🔑 Rol obtenido de BD: CLIENTE
2025-10-27 11:02:07 [http-nio-8080-exec-10] INFO  p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Usuario autenticado: cesar_2002_love@hotmail.com (rol: CLIENTE)
2025-10-27 11:02:07 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/usuarios/direcciones
2025-10-27 11:02:07 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - ✅ Aplicando filtro a: /api/usuarios/direcciones
2025-10-27 11:02:07 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity pe.com.ikaza.backend.controller.DireccionController.cargarDirecciones(); target is of class [pe.com.ikaza.backend.controller.DireccionController]
2025-10-27 11:02:08 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity pe.com.ikaza.backend.controller.DireccionController.cargarDirecciones(); target is of class [pe.com.ikaza.backend.controller.DireccionController]
2025-10-27 11:02:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_actualizacion,
        u1_0.fecha_creacion,
        u1_0.firebase_uid,
        u1_0.password,
        u1_0.id_rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.email=?
2025-10-27 11:02:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_cliente,
        c1_0.apellidos_cliente,
        c1_0.fecha_actualizacion,
        c1_0.fecha_nacimiento,
        c1_0.genero,
        c1_0.nombres_cliente,
        c1_0.numero_documento,
        c1_0.prefijo_telefono,
        c1_0.telefono,
        c1_0.telefono_verificado,
        c1_0.tipo_documento,
        c1_0.id_usuario 
    from
        clientes c1_0 
    where
        c1_0.id_usuario=?
2025-10-27 11:02:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_rol,
        r1_0.descripcion_rol,
        r1_0.nombre_rol 
    from
        roles r1_0 
    where
        r1_0.id_rol=?
2025-10-27 11:02:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_direccion,
        d1_0.alias,
        d1_0.codigo_postal,
        d1_0.direccion,
        d1_0.distrito,
        d1_0.es_principal,
        d1_0.fecha_creacion,
        d1_0.id_usuario,
        d1_0.latitud,
        d1_0.longitud,
        d1_0.pais,
        d1_0.provincia,
        d1_0.referencia,
        d1_0.region 
    from
        direcciones d1_0 
    where
        d1_0.id_usuario=?
2025-10-27 11:02:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=pla&country=pe
2025-10-27 11:02:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=pla&country=pe
2025-10-27 11:02:15 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:15 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=pla&country=pe
2025-10-27 11:02:15 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:16 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaz&country=pe
2025-10-27 11:02:16 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaz&country=pe
2025-10-27 11:02:16 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:16 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:16 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaz&country=pe
2025-10-27 11:02:16 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:16 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza&country=pe
2025-10-27 11:02:16 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza&country=pe
2025-10-27 11:02:16 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:16 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:16 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza&country=pe
2025-10-27 11:02:16 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20&country=pe
2025-10-27 11:02:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20&country=pe
2025-10-27 11:02:21 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:21 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20&country=pe
2025-10-27 11:02:21 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:23 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20d&country=pe
2025-10-27 11:02:23 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20d&country=pe
2025-10-27 11:02:23 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:23 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:23 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20d&country=pe
2025-10-27 11:02:23 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20de&country=pe
2025-10-27 11:02:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de&country=pe
2025-10-27 11:02:23 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:23 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de&country=pe
2025-10-27 11:02:23 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20de%20&country=pe
2025-10-27 11:02:23 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20&country=pe
2025-10-27 11:02:23 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:23 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:23 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20&country=pe
2025-10-27 11:02:23 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:24 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20de%20a&country=pe
2025-10-27 11:02:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20a&country=pe
2025-10-27 11:02:24 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:24 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20a&country=pe
2025-10-27 11:02:24 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20de%20ar&country=pe
2025-10-27 11:02:24 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20ar&country=pe
2025-10-27 11:02:24 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:24 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:24 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20ar&country=pe
2025-10-27 11:02:24 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20de%20arm&country=pe
2025-10-27 11:02:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20arm&country=pe
2025-10-27 11:02:24 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:24 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20arm&country=pe
2025-10-27 11:02:24 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:24 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20de%20arma&country=pe
2025-10-27 11:02:24 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20arma&country=pe
2025-10-27 11:02:24 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:24 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:24 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20arma&country=pe
2025-10-27 11:02:24 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20de%20armas&country=pe
2025-10-27 11:02:25 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20armas&country=pe
2025-10-27 11:02:25 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:25 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:25 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20armas&country=pe
2025-10-27 11:02:25 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20de%20armas%20&country=pe
2025-10-27 11:02:25 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20armas%20&country=pe
2025-10-27 11:02:25 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:25 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:25 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20armas%20&country=pe
2025-10-27 11:02:25 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:25 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20de%20armas%20i&country=pe
2025-10-27 11:02:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20armas%20i&country=pe
2025-10-27 11:02:25 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20armas%20i&country=pe
2025-10-27 11:02:25 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20de%20armas%20ic&country=pe
2025-10-27 11:02:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20armas%20ic&country=pe
2025-10-27 11:02:26 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:26 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20armas%20ic&country=pe
2025-10-27 11:02:26 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20de%20armas%20ica&country=pe
2025-10-27 11:02:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20armas%20ica&country=pe
2025-10-27 11:02:26 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20armas%20ica&country=pe
2025-10-27 11:02:26 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:26 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20armas%20ic&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20armas%20ic&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20armas%20i&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20armas%20i&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20armas%20&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20armas%20&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20armas&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20armas&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20arma&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20arma&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20arm&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20arm&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20ar&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:27 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20ar&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20a&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:27 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20a&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de%20&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:27 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de%20&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20de&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:27 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20de&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20d&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20d&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaz&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaz&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=pla&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:27 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=pla&country=pe
2025-10-27 11:02:27 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=pla&country=pe
2025-10-27 11:02:29 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:29 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=pla&country=pe
2025-10-27 11:02:29 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:29 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaz&country=pe
2025-10-27 11:02:29 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:29 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:29 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaz&country=pe
2025-10-27 11:02:29 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:29 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza&country=pe
2025-10-27 11:02:29 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:29 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:29 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza&country=pe
2025-10-27 11:02:29 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20&country=pe
2025-10-27 11:02:30 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:30 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20&country=pe
2025-10-27 11:02:30 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20i&country=pe
2025-10-27 11:02:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20i&country=pe
2025-10-27 11:02:30 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:30 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20i&country=pe
2025-10-27 11:02:30 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:31 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20ic&country=pe
2025-10-27 11:02:31 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20ic&country=pe
2025-10-27 11:02:31 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:31 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:31 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20ic&country=pe
2025-10-27 11:02:31 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:31 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=plaza%20ica&country=pe
2025-10-27 11:02:31 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20ica&country=pe
2025-10-27 11:02:31 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:31 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:31 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20ica&country=pe
2025-10-27 11:02:31 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20ic&country=pe
2025-10-27 11:02:32 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:32 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20ic&country=pe
2025-10-27 11:02:32 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20i&country=pe
2025-10-27 11:02:32 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20i&country=pe
2025-10-27 11:02:32 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza%20&country=pe
2025-10-27 11:02:32 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:32 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza%20&country=pe
2025-10-27 11:02:32 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaza&country=pe
2025-10-27 11:02:32 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:32 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaza&country=pe
2025-10-27 11:02:32 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=plaz&country=pe
2025-10-27 11:02:32 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:32 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=plaz&country=pe
2025-10-27 11:02:32 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=pla&country=pe
2025-10-27 11:02:32 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:32 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=pla&country=pe
2025-10-27 11:02:32 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=aco&country=pe
2025-10-27 11:02:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=aco&country=pe
2025-10-27 11:02:33 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:33 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=aco&country=pe
2025-10-27 11:02:33 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:33 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=acom&country=pe
2025-10-27 11:02:33 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=acom&country=pe
2025-10-27 11:02:33 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:33 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:33 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=acom&country=pe
2025-10-27 11:02:33 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=acoma&country=pe
2025-10-27 11:02:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=acoma&country=pe
2025-10-27 11:02:33 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:33 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=acoma&country=pe
2025-10-27 11:02:33 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:33 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=acomay&country=pe
2025-10-27 11:02:33 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=acomay&country=pe
2025-10-27 11:02:33 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:33 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:33 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=acomay&country=pe
2025-10-27 11:02:33 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:34 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=acomayo&country=pe
2025-10-27 11:02:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=acomayo&country=pe
2025-10-27 11:02:34 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:34 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=acomayo&country=pe
2025-10-27 11:02:34 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/place-details?placeId=EhJBY29tYXlvLCBJY2EsIFBlcnUiLiosChQKEgnv_bHNm-IQkREmP2V-0xkBIhIUChIJPU_HzsPiEJERzX7mkLWi4Vw
2025-10-27 11:02:35 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/place-details?placeId=EhJBY29tYXlvLCBJY2EsIFBlcnUiLiosChQKEgnv_bHNm-IQkREmP2V-0xkBIhIUChIJPU_HzsPiEJERzX7mkLWi4Vw
2025-10-27 11:02:35 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 11:02:35 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:35 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/place-details?placeId=EhJBY29tYXlvLCBJY2EsIFBlcnUiLiosChQKEgnv_bHNm-IQkREmP2V-0xkBIhIUChIJPU_HzsPiEJERzX7mkLWi4Vw
2025-10-27 11:02:35 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 11:02:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=0&lng=-75.7231375
2025-10-27 11:02:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=0&lng=-75.7231375
2025-10-27 11:02:36 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:02:36 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=0&lng=-75.7231375
2025-10-27 11:02:36 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:02:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20Ica%2C%20Per&country=pe
2025-10-27 11:02:57 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20Ica%2C%20Per&country=pe
2025-10-27 11:02:57 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:57 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:57 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20Ica%2C%20Per&country=pe
2025-10-27 11:02:57 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20Ica%2C%20Pe&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20Ica%2C%20Pe&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20Ica%2C%20Pe&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20Ica%2C%20P&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20Ica%2C%20P&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20Ica%2C%20P&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20Ica%2C%20&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20Ica%2C%20&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20Ica%2C%20&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20Ica%2C&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20Ica%2C&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20Ica%2C&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20Ica&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20Ica&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20Ica&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20Ic&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20Ic&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20Ic&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20I&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20I&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20I&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C%20&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C%20&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:58 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C%20&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo%2C&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo%2C&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:58 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo%2C&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomayo&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomayo&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomayo&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acomay&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acomay&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acomay&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acoma&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acoma&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acoma&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Acom&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Acom&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Acom&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=Aco&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=Aco&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=Aco&country=pe
2025-10-27 11:02:58 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:59 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=ica&country=pe
2025-10-27 11:02:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica&country=pe
2025-10-27 11:02:59 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:02:59 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:02:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica&country=pe
2025-10-27 11:02:59 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=ica%2C&country=pe
2025-10-27 11:03:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica%2C&country=pe
2025-10-27 11:03:02 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:02 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica%2C&country=pe
2025-10-27 11:03:02 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=ica%2C%20&country=pe
2025-10-27 11:03:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica%2C%20&country=pe
2025-10-27 11:03:02 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica%2C%20&country=pe
2025-10-27 11:03:02 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=ica%2C%20i&country=pe
2025-10-27 11:03:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica%2C%20i&country=pe
2025-10-27 11:03:02 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica%2C%20i&country=pe
2025-10-27 11:03:02 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=ica%2C%20ic&country=pe
2025-10-27 11:03:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica%2C%20ic&country=pe
2025-10-27 11:03:02 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:02 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica%2C%20ic&country=pe
2025-10-27 11:03:02 [http-nio-8080-exec-1] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=ica%2C%20ica&country=pe
2025-10-27 11:03:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica%2C%20ica&country=pe
2025-10-27 11:03:03 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica%2C%20ica&country=pe
2025-10-27 11:03:03 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/place-details?placeId=ChIJ55lnqbICEZERPSt5ZMNUB90
2025-10-27 11:03:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/place-details?placeId=ChIJ55lnqbICEZERPSt5ZMNUB90
2025-10-27 11:03:04 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 11:03:04 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/place-details?placeId=ChIJ55lnqbICEZERPSt5ZMNUB90
2025-10-27 11:03:04 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 11:03:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=0&lng=-75.70198409999999
2025-10-27 11:03:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=0&lng=-75.70198409999999
2025-10-27 11:03:04 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:04 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=0&lng=-75.70198409999999
2025-10-27 11:03:04 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=0&lng=-75.70198409999999
2025-10-27 11:03:18 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:18 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=0&lng=-75.70198409999999
2025-10-27 11:03:18 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:22 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G6272X%2B2&country=pe
2025-10-27 11:03:22 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G6272X%2B2&country=pe
2025-10-27 11:03:22 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:22 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:22 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G6272X%2B2&country=pe
2025-10-27 11:03:22 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:22 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G6272X%2B&country=pe
2025-10-27 11:03:22 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G6272X%2B&country=pe
2025-10-27 11:03:22 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:22 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:22 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G6272X%2B&country=pe
2025-10-27 11:03:22 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G6272X&country=pe
2025-10-27 11:03:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G6272X&country=pe
2025-10-27 11:03:22 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:22 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G6272X&country=pe
2025-10-27 11:03:22 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:23 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G6272&country=pe
2025-10-27 11:03:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G6272&country=pe
2025-10-27 11:03:23 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:23 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G6272&country=pe
2025-10-27 11:03:23 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:23 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G627&country=pe
2025-10-27 11:03:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G627&country=pe
2025-10-27 11:03:23 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:23 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G627&country=pe
2025-10-27 11:03:23 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G62&country=pe
2025-10-27 11:03:23 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G62&country=pe
2025-10-27 11:03:23 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:23 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:23 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G62&country=pe
2025-10-27 11:03:23 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G6&country=pe
2025-10-27 11:03:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G6&country=pe
2025-10-27 11:03:23 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:23 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G6&country=pe
2025-10-27 11:03:23 [http-nio-8080-exec-2] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:23 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/autocomplete?input=67G&country=pe
2025-10-27 11:03:23 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=67G&country=pe
2025-10-27 11:03:23 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:23 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:23 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=67G&country=pe
2025-10-27 11:03:23 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:24 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica&country=pe
2025-10-27 11:03:24 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:24 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:24 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica&country=pe
2025-10-27 11:03:24 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica%2C&country=pe
2025-10-27 11:03:26 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:26 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica%2C&country=pe
2025-10-27 11:03:26 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica%2C%20&country=pe
2025-10-27 11:03:27 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica%2C%20&country=pe
2025-10-27 11:03:27 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:27 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica%2C%20i&country=pe
2025-10-27 11:03:27 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:27 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:27 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica%2C%20i&country=pe
2025-10-27 11:03:27 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica%2C%20ic&country=pe
2025-10-27 11:03:27 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:27 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica%2C%20ic&country=pe
2025-10-27 11:03:27 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/autocomplete?input=ica%2C%20ica&country=pe
2025-10-27 11:03:27 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:27 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/autocomplete?input=ica%2C%20ica&country=pe
2025-10-27 11:03:27 [http-nio-8080-exec-8] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/autocomplete
2025-10-27 11:03:28 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/place-details?placeId=ChIJ55lnqbICEZERPSt5ZMNUB90
2025-10-27 11:03:28 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 11:03:28 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:28 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/place-details?placeId=ChIJ55lnqbICEZERPSt5ZMNUB90
2025-10-27 11:03:28 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/place-details
2025-10-27 11:03:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=-0.0037432728250329154&lng=-75.70152175291136
2025-10-27 11:03:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=-0.0037432728250329154&lng=-75.70152175291136
2025-10-27 11:03:37 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=-0.0037432728250329154&lng=-75.70152175291136
2025-10-27 11:03:37 [http-nio-8080-exec-7] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=-0.0025662119870037718&lng=-75.70137194472758
2025-10-27 11:03:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=-0.0025662119870037718&lng=-75.70137194472758
2025-10-27 11:03:39 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:39 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=-0.0025662119870037718&lng=-75.70137194472758
2025-10-27 11:03:39 [http-nio-8080-exec-10] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=-0.0035078605265739782&lng=-75.7016501590841
2025-10-27 11:03:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=-0.0035078605265739782&lng=-75.7016501590841
2025-10-27 11:03:40 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:40 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=-0.0035078605265739782&lng=-75.7016501590841
2025-10-27 11:03:40 [http-nio-8080-exec-9] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=-0.003208245469205819&lng=-75.70357625887831
2025-10-27 11:03:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=-0.003208245469205819&lng=-75.70357625887831
2025-10-27 11:03:45 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:45 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=-0.003208245469205819&lng=-75.70357625887831
2025-10-27 11:03:45 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=-0.0021381901019120837&lng=-75.70162875838272
2025-10-27 11:03:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=-0.0021381901019120837&lng=-75.70162875838272
2025-10-27 11:03:46 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:46 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=-0.0021381901019120837&lng=-75.70162875838272
2025-10-27 11:03:46 [http-nio-8080-exec-6] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=-0.003700470767548605&lng=-75.70625139664466
2025-10-27 11:03:48 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=-0.003700470767548605&lng=-75.70625139664466
2025-10-27 11:03:48 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:48 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:48 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=-0.003700470767548605&lng=-75.70625139664466
2025-10-27 11:03:48 [http-nio-8080-exec-3] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=-0.004363904950285009&lng=-75.70203537891197
2025-10-27 11:03:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=-0.004363904950285009&lng=-75.70203537891197
2025-10-27 11:03:49 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:49 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=-0.004363904950285009&lng=-75.70203537891197
2025-10-27 11:03:49 [http-nio-8080-exec-5] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:57 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/google-maps/geocode?lat=-0.00406428923838414&lng=-75.7004730988991
2025-10-27 11:03:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/google-maps/geocode?lat=-0.00406428923838414&lng=-75.7004730988991
2025-10-27 11:03:57 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
2025-10-27 11:03:57 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-27 11:03:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/google-maps/geocode?lat=-0.00406428923838414&lng=-75.7004730988991
2025-10-27 11:03:57 [http-nio-8080-exec-4] DEBUG p.c.i.b.s.FirebaseAuthTokenFilter - 🚫 Excluyendo del filtro: /api/google-maps/geocode
